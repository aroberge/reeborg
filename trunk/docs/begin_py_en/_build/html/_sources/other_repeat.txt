An other way to repeat
======================

Here we present a different way to repeat a given instruction, one that
is more specific to the instruction that we want to repeat. Suppose we
want to *turn right* or *turn around* but want to have a single function
name to remember. One way to do it is as follows::

    def turn(n)
        for i in range(n):
            turn_left()

Using this definition, ``turn_right()`` would be written as ``turn(3)``
and ``turn_around()`` would be written as ``turn(2)``. Try it!

Having a default behaviour
--------------------------

Remember how ``take()`` and ``take("token")`` are equivalent? Would it
be nice to have something similar for ``turn()`` where ``turn()``, with
no argument, would be equivalent to a single ``turn_left()``
instruction?

This can be accomplished as follows::

    def turn(n):
        if n is None:    # None indicates that no argument was given
            n = 1        # default behaviour
        for i in range(n):
            turn_left()

Note that, if a number less than 1 is passed as an
argument, the ``for`` loop is skipped and Reeborg does not turn.

.. topic:: Try it!

   Write programs that make use of the code samples above.

