<nav>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('teleport4')">Previous</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('toc')">Table of Contents</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('array2')">Next</a>
</nav>

<h1>Javascript arrays</h1>
<p>I don't know about you, but I'm getting hungry. It would be so nice to have some delicious chocolate mousse cake to eat.</p>
<h2>Chocolate Mousse Recipe</h2>

<ul><li>List of ingredients</li>
<ul><li>4 eggs</li>
<li>100 g of sugar</li>
<li>250 g of dark semi-sweet chocolate</li>
<li>30 ml of cocoa powder</li></ul></ul>
<p>To actually make the cake, we need the recipe. Something like:</p>
<ul><li>Preheat the oven to 180 C (350 F).</li>
<li>Separate the egg whites from the yolks.</li>
<li><em>etc.</em></li></ul>

<p>A recipe is very much like a computer program: it's a series of instructions that one needs to
follow in a precise order to accomplish a desired result.
I think we have enough to learn about programming,
that I will end the cooking lesson at this point and go back to Javascript
and talk about <code>Arrays</code>.</p>


<h2>Arrays</h2>
<p>Here is the list of ingredients of the above recipe presented as a Javascript array</p>
<pre class="jscode">ingredients = ["4 eggs", "100 g of sugar",
"250 g of dark semi-sweet chocolate",
"30 ml of cocoa powder"]</pre>
<p>Alternatively, instead of the shortcut notation <code>[ ... ]</code>, we could
have written this as:</p>
<pre class="jscode">ingredients = new Array("4 eggs", "100 g of sugar",
"250 g of dark semi-sweet chocolate",
"30 ml of cocoa powder")</pre>

<p>Javascript arrays have multiple methods such as <code>sort</code>, <code>reverse</code>,
<code>shift</code>, etc.  You can find a more complete description on
<a href="https://developer.mozilla.org/en/docs/JavaScript/Reference/Global_Objects/Array">Mozilla's Developers site</a>.
Here, we will introduce only two array methods, <code>push</code> and <code>pop</code> as
well as one property, <code>length</code>.</p>
<p>Make sure that Reeborg's Diary is visible and run the following program:</p>
<pre class="jscode">var list = ["abc", 1, 10.4];

write( list );
write( list[0] );

write( list.length );
write("-----");

for (var i=0; i < list.length; i++ ){
    write( list[i] );
}

write("-----");
list.push(42);
write( list );
write( list.length );

write("-----");
write( list.pop() );
write( list );
write( list.length );</pre>
<p>Some things to note:</p>
<ul>
    <li>Individual array items are accessed using the bracket notation: <code>[array_index]</code></li>
    <li>The first item has index 0</li>
    <li><code>name_of_array.length</code> refers to the number of items in that array</li>
    <li><code>push()</code> is used to add one item at the end of the array</li>
    <li><code>pop()</code> removes the last item on the array and <em>returns</em> it</li>
</ul>

<a class="left-link" href="Javascript:void(0);" onClick="load_page('teleport4')">Previous</a>
<a class="right-link" href="Javascript:void(0);" onClick="load_page('array2')">Next</a>

