<nav>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('fixing2')">Previous</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('toc')">Table of Contents</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('fixing4')">Next</a>
</nav>
<h1>Fixing the compass</h1>
<p>With Reeborg's diary open, execute the following program:</p>
<pre class="jscode">var Reeborg = new ImprovedRobot();

for (var i = 0; i < 4; i++) {
    write( Reeborg.is_facing_north() );
    Reeborg.turn_left();
}</pre>
<p><b>Important:</b> note that we are <b>executing</b> the function
<code>is_facing_north()</code> as it ends with <code>()</code>.</p>
<p>As you can see from the result in Reeborg's diary,
Reeborg can correctly identify when he is facing north.  However,
if you try to replace <code>is_facing_north()</code> by <code>is_facing_east()</code>,
an error will be raised.</p>
<p>Let's see the definition of <code>is_facing_north</code> by running
the following program:</p>
<pre class="jscode">var Reeborg = new ImprovedRobot();
view_source( Reeborg.is_facing_north );</pre>
<p>From the result, this suggest that the following definition might do what we want:</p>
<pre class="jscode">ImprovedRobot.prototype.is_facing_east = function () {
    return this.orientation === RUR.world.EAST;
};</pre>
<p><b>Try it!</b></p>
<h2>Fix Reeborg</h2>
<p>Implement <code>is_facing_east</code>, <code>is_facing_south</code>, <code>is_facing_west</code>
as methods for <code>ImprovedRobot</code>, save the code in your library and test it for each and every
direction using a <code>for</code> loop like we did at the beginning of this lesson.</p>

<a class="left-link" href="Javascript:void(0);" onClick="load_page('fixing2')">Previous</a>
<a class="right-link" href="Javascript:void(0);" onClick="load_page('fixing4')">Next</a>