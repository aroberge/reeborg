<nav>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('newspaper1')">Previous</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('toc')">Table of Contents</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('functions1')">Next</a>
</nav>
<h1>Rule number 3</h1>
<p>By now, you should be ready to learn about the third rule for writing
computer programs efficiently.</p>
<dl>
<dt><b>Rule # 3</b></dt>
<dd>When writing computer programs, do not repeat yourself.<br>
I repeat: <b>do not repeat yourself!</b></dd>
</dl>

<h2>Three lefts can make a right</h2>
<p>Since you have written quite a few programs by now (<small>you have done
the exercises, didn't you?</small>), you must have realized that having Reeborg
make three left turns in a row gives the same final result as if he were to
make a single right turn.  You are probably starting to find it quite
tedious to have to write three <code>turn_left();</code> instructions
each time you want to have Reeborg turn right.  Wouldn't it be nicer if
you could simply write <code>turn_right();</code>?</p>
<p>By the end of this lesson, you will be able to do just that.</p>

<h2>Defining functions</h2>
<p>What we have called <em>instructions</em> or <em>commands</em> so far
are examples of Javascript <b>functions</b>.  So, <code>turn_left()</code>
is a function and so is <code>move()</code>.  We can define a new
Javascript function as follows:</p>
<pre class="jscode">
function some_well_chosen_name () {
    // some lines of code ...
}</pre>
<p>
<code>function</code> is our very first Javascript <b>keyword</b>; keywords
are names in a programming language that are assigned some special meaning that
will be the same independently of who writes the program. Note how it appears
in a different colour above: all Javascript keywords will be identified
similarly. Notice how the, curly braces <code>{ }</code> surround what
is known as a <em>block of code</em> and constitutes the <em>body </em> of the
function.  It is customary to <em>indent</em> such blocks of code to make it easier
to identify the function body, rather than simply relying on spotting the
curly braces. </p>
<p>Let's write our first Javascript function:</p>
<pre class="jscode">
function turn_right () {
    turn_left();
    turn_left();
    turn_left();
}</pre>
<p>That's it!  You will now be able to avoid having to write three
<code>turn_left()</code> functions in a row to simulate a right
turn!</p>
<p>Define the  <code>turn_right()</code> function in a program and try
to use it, perhaps using the world <span class="world">Alone</span>.
If you don't know what to try, just have Reeborg go around a square
by alternating <code>turn_right()</code> and <code>move()</code>
<b>functions</b> four times in a row.</p>
<a class="left-link" href="Javascript:void(0);" onClick="load_page('newspaper1')">Previous</a>
<a class="right-link" href="Javascript:void(0);" onClick="load_page('functions1')">Next</a>