<nav>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('repeat')">Previous</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('toc')">Table of Contents</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('summary3')">Next</a>
</nav>
<h1>Reeborg goes to France</h1>

<ul><li><em> Quelque chose à déclarer Monsieur. ... Reeborg?</em></li>
    <li><tt>Je ne parle pas français .... I do not speak French.</tt></li>
    <li><em>Do you have something to declare?</em></li>
    <li><tt>Perhaps I should ...</tt></li>
</ul>

<p>Reeborg is known internationally and travels often.  It might be useful to teach him
words in a different language.  For functions, this can be done using the Javascript
keyword <code>var</code>.  I like to think of <code>var</code> as creating some <code>var</code>iation of
the language, perhaps following a <code>V</code>ery <code>A</code>cient <code>R</code>itual.  However,
in programming terms, this is simply known as <b>declaring</b> a <code>var</code><b>iable</b>.</p>
<p>We can do this in either one or two steps.</p>

<pre class="jscode">
var avance;      // declare a new word
avance = move;   // define the equivalence
var tourne_à_gauche = turn_left;  // do both in one step

// notice the absence of parentheses ()
// in the declaration above.

// use the newly named functions
// just like the old ones.

avance();
tourne_à_gauche();
move();    //  still works
}</pre>
<h2>Try it!</h2>
<p>Perhaps you could define your own language for giving instructions to Reeborg
    (<small>and save it in the library?</small>).</p>
<p>For now, limit yourselves with names that start with a letter and contain
    only letters,  numbers or the underscore character "_"; a name can <b>not</b> have
a space in it - which is why many people use the underscore character to create
names that look like many words that would be a phrase; thus, instead of
<em>turn left</em>, we write <code>turn_left</code>.</p>

<h2>Note for the advanced reader</h2>
<p>If you have learned some Javascript elsewhere, you have seen that the <code>var</code> keyword
is not normally required.  Reeborg's world uses what is known as the <b>strict</b> mode, which
has many advantages in terms of producing more robust code.  There is a way to disable
this strict mode within Reeborg's world, which I will mention later.</p>


<a class="left-link" href="Javascript:void(0);" onClick="load_page('repeat')">Previous</a>
<a class="right-link" href="Javascript:void(0);" onClick="load_page('summary3')">Next</a>