<nav>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('fixing1')">Previous</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('toc')">Table of Contents</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('fixing3')">Next</a>
</nav>
<h1>Turning right</h1>
<p>As we have seen before, the makers of Reeborg were working on implementing
a <code>turn_right</code> method when the UsedRobot brand went to the market.
You can see the implementation of that method in Reeborg's Diary by
executing the following program:</p>
<pre class="jscode">var Reeborg = new UsedRobot();
view_source(Reeborg.__turn_right);</pre>
<p>In order to have our <code>ImprovedRobot</code> turn right properly,
we could copy the existing code in a method as follows:</p>
<pre class="jscode">ImprovedRobot.prototype.turn_right = function () {
    // code from the __turn_right method here
};</pre>
<p>However, as we have seen earlier:</p>
<dl>
<dt><b>Rule # 3</b></dt>
<dd>When writing computer programs, do not repeat yourself.<br>
I repeat: <b>do not repeat yourself!</b></dd>
</dl>
<p>So, instead of just <b>repeating</b> what was done by <b>copying</b> the existing
code, we can do the following instead:</p>
<pre class="jscode">ImprovedRobot.prototype.turn_right = UsedRobot.__turn_right;</pre>
<p>Save these this of code in your library so that you can use this
method whenever you want.  Note that by doing it in this way,
<code>UsedRobot</code> is not modified and thus:</p>
<pre class="jscode">var Reeborg = new UsedRobot();
var newReeborg = new ImprovedRobot();
newReeborg.turn_right();  // works
Reeborg.turn_right();  // causes an error</pre>




<a class="left-link" href="Javascript:void(0);" onClick="load_page('fixing1')">Previous</a>
<a class="right-link" href="Javascript:void(0);" onClick="load_page('fixing3')">Next</a>