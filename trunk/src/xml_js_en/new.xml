<nav>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('oop')">Previous</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('toc')">Table of Contents</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('many')">Next</a>
</nav>

<h1>A Used Robot gets his name</h1>


<p>So far, all the programs we wrote instructing Reeborg to accomplish tasks have been written without using the dot notation. Let's change this, starting with a simple example.</p>

<p>First, we start by selecting the world <span class="world">Empty</span> which has no robot in it.</p>

<p>Now, you might remember what we said about Reeborg: it is old and faulty ... since it is a Used Robot.
[We will learn how to fix it and its
friends later.] So, we will create our first instance of a <code>UsedRobot</code> and name it, appropriately, Reeborg! We will then instruct it to take one step.</p>

<pre class="jscode">var Reeborg = new UsedRobot();
Reeborg.move();</pre>

<p>If you don't like the combination of <code>new</code> with  <code>Used</code>, remember that while
Reeborg might be a <code>UsedRobot</code>, it is <code>new</code> to you
<small>[spoken like a true used robot salesperson].</small></p>

<h2>Try it!</h2>
<p>You might want to write a more complicated program, having Reeborg's name preceding any command
given to him.</p>

<h2>One more keyword: <code>instanceof</code></h2>
<p>We have already said that Reeborg, as defined above, is an <b><em>instance of</em></b> a <code>UsedRobot</code>.
Open Reeborg's diary and verify this:</p>

<pre class="jscode">var Reeborg = new UsedRobot();
write( Reeborg instanceof UsedRobot);</pre>

<p>Actually, <code>UsedRobot</code> is derived from a more primitive class of objects:
<code>RUR.Robot</code> as can easily be verified.</p>

<pre class="jscode">var Reeborg = new UsedRobot();
write( Reeborg instanceof UsedRobot);
write( Reeborg instanceof RUR.Robot);</pre>

<p>However, a  <code>RUR.Robot</code> is not a <code>UsedRobot</code>:</p>

<pre class="jscode">var Reeborg = new RUR.Robot();
write( Reeborg instanceof UsedRobot);
write( Reeborg instanceof RUR.Robot);</pre>

<p>We will learn more about "derived" classes of objects later.</p>

<a class="left-link" href="Javascript:void(0);" onClick="load_page('oop')">Previous</a>
<a class="right-link" href="Javascript:void(0);" onClick="load_page('many')">Next</a>

