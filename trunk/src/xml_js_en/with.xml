<nav>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('maze_again')">Previous</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('toc')">Table of Contents</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('keywords')">Next</a>
</nav>

<h1>The <code>with</code> keyword</h1>
<p>If you read other tutorials, or some Javascript code samples, you might encounter
the Javascript keyword <code>with</code>.  We recommend that you do not use it.  However,
you can see the purpose of this keyword using the following example.</p>
<pre class="jscode">// select a world with a robot.
var Reeborg = new UsedRobot(2,4); // create a second one.
move();   // refers to the first robot.
Reeborg.move(); // second.

// try uncommenting the following
/* with (Reeborg) {
    move();
    move();
}
*/  // won't work
</pre>

<p>Reeborg's world forces the code to be in what is known as <b>strict mode</b>.
This is done by inserting the string</p>
<pre class="jscode">"use strict";
</pre>
<p>as the first line of a function definition.</p>
<p>
Strict mode has been created in order to help prevent common mistakes in Javascript.
It is normally not done by default ... but has been made this way to help you learn
good programming habits.
</p>
<h2>Let's live dangerously</h2>
<p>If you write</p>
<pre class="jscode">"no strict";
</pre>
<p>as the first line of the code in the editor, it will be executed in the <b>normal</b>
Javascript mode, i.e. without the usual <b>strict</b> safeguard.  In addition,
I use jshint to identify any mistakes and point them out; this is disabled when
you use the <code>"no strict";</code> mode, exclusive to Reeborg's world. For example:</p>
<pre class="jscode">"no strict";
Reeborg = new UsedRobot(2,4); // we did not use "var" !!!
move();                // make sure to select a world with a default robot.
Reeborg.move();

with (Reeborg) {
    move();      // same as Reeborg.move();
    move();
}
</pre>
<p>As you can see, <code>with</code> sets up a block so that the object whose methods
are invoked is known by default, so that it does not have to be typed in explicitly.</p>

<a class="left-link" href="Javascript:void(0);" onClick="load_page('maze_again')">Previous</a>
<a class="right-link" href="Javascript:void(0);" onClick="load_page('keywords')">Next</a>
