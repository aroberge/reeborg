<nav>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('fixed')">Previous</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('toc')">Table of Contents</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('with')">Next</a>
</nav>
<h1>A last challenge</h1>
<p>Using your fully improved robot, write a <b>single program</b> that can solve both maze worlds with
as few wasted moved as possible.  For example, use a <code>turn_right</code> method that does not
require the robot to do three left turns.</p>
<p>Your program should implement both a <code>follow_the_right_wall</code> function or method,
like the original solution we derived, as well as a <code>follow_the_left_wall</code> function
or method.</p>
<p>The mazes already contain a <code>UsedRobot</code>.
You should start by obtaining the <code>y</code> coordinate (or attribute) of that existing robot
before removing it and replacing it by an <code>ImprovedRobot</code> (or whatever name you choose)
at that same location. Also based on the location of that robot, you should decide if the robot
should use the <code>follow_the_right_wall</code> function or method or the
<code>follow_the_left_wall</code> one. </p>
<p>Keep the robot leaky so that you can see if it makes unnecessary turns.</p>

<a class="left-link" href="Javascript:void(0);" onClick="load_page('fixed')">Previous</a>
<a class="right-link" href="Javascript:void(0);" onClick="load_page('with')">Next</a>