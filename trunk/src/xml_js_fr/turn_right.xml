<nav>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('many')">Précédent</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('toc')">Table des matières</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('prototype')">Suivant</a>
</nav>

<h1>Plusieurs virages à droite</h1>

<p>Sélectionnez le monde <span class="world">Vide</span> dans lequel il n'y a aucun robot.
Ensuite, définissez la fonction suivante:</p>

<pre class="jscode">function tourne_à_droite(robot) {
    robot.tourne_à_gauche();
    robot.tourne_à_gauche();
    robot.tourne_à_gauche();
}</pre>

<p>Notez la variable <code>robot</code> utilisée comme argument de la fonction et comment
on l'utilise à l'intérieur; cette variable est le nom du robot choisi.</p>

<p>Une fois définie la fonction ci-dessus, vous pouvez l'utiliser comme suit: </p>

<pre class="jscode">var Reeborg = new RobotUsagé();
var Erdna = new RobotUsagé();
Reeborg.avance();
tourne_à_droite(Reeborg);
Erdna.tourne_à_gauche();
tourne_à_droite(Erdna);</pre>

<p>Ça fonctionne ... mais ça n'est pas très élégant puisqu'on utilise une <em>fonction</em> pour
faire des virages à droite et une <em>méthode</em> pour faire des virages à gauche.   Il
doit y avoir une meilleure façon de faire les choses...
</p>

<a class="left-link" href="Javascript:void(0);" onClick="load_page('many')">Précédent</a>
<a class="right-link" href="Javascript:void(0);" onClick="load_page('prototype')">Suivant</a>

