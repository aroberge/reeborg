<nav>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('teleport2')">Précédent</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('toc')">Table des matières</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('teleport4')">Suivant</a>
</nav>

<h1>Toujours la téléportation</h1>

<p>Comme vous le savez, Reeborg a une fuite d'huile, ce qui le rend facile à suivre
    à la trace mais qui et dommageable pour l'environnement.  Lorsque Reeborg se
    déplace, la fuite d'huile trace une ligne de sa position <em>précédente</em>
    (ou <em>previous</em> en anglais) à sa position actuelle.  Cependant, la
    méthode <code>téléporte</code> ne semble pas tenir compte de la position précédente
    de Reeborg.</p>
<p>Si vous examinez le code source pour diverses méthodes de Reeborg, vous verrez
    que deux attributs, <code>prev_x</code> et <code>prev_y</code>, semblent
    être reliés à la position précédente de Reeborg.  Essayons d'actualiser
    la valeur de ces attributs lorsque Reeborg se téléporte. </p>

<pre class="jscode">RobotUsagé.prototype.téléporte = function (x, y) {
    this.prev_x = this.x;  // sauvegarde les valeurs avant la téléportation
    this.prev_y = this.y;

    this.x = x;
    this.y = y;
    RUR.world.add_frame();
};

var Reeborg = new RobotUsagé();
Reeborg.téléporte(3, 3);
Reeborg.téléporte(4, 8);
</pre>
<p>Si vous exécutez ce programme, vous verrez que la fuite d'huile suit Reeborg
    correctement lorsqu'il se téléporte.</p>
<p>Il demeure cependant un petit problème: Reeborg semble <em>sauter</em> d'un endroit
à l'autre plutôt que se téléporter.  En effet, on s'attendrait à ce que la téléportation
ait lieu instantanément, sans ne laisser de trace.  On peut faire ceci en arrêtant
(temporairement) la fuite d'huile.</p>
<p>Une fois de plus, examinez les méthodes et attributs de Reeborg en utilisant le
    programme suivant:</p>
<pre class="jscode">var Reeborg = new RobotUsagé();
examine(Reeborg);
voir_source(Reeborg.un_attribut);  // pouvez-vous deviner le nom?
voir_source(Reeborg.une_méthode);  // pouvez-vous deviner le nom?</pre>
<p>Un dictionnaire anglais-français pourrait peut-être être utile...</p>

<a class="left-link" href="Javascript:void(0);" onClick="load_page('teleport2')">Précédent</a>
<a class="right-link" href="Javascript:void(0);" onClick="load_page('teleport4')">Suivant</a>

