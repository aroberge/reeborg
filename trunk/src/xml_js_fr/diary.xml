<nav>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('harvest3')">Précédent</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('toc')">Table des matières</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('increment')">Suivant</a>
</nav>

<h1>Le journal de Reeborg</h1>

<p>Cliquez sur le bouton <b>Monde</b> au haut de l'écran pour cacher le monde de Reeborg.
Cliquez également sur le bouton <b>Journal</b> pour voir le journal de Reeborg, là où notre
robot favori écrit.</p>
<p>Exécutez le programme suivant</p>
<pre class="jscode">écrit(42);</pre>
<p>Vous devriez voir que Reeborg écrit la réponse à la question ultime au sujet de la Vie, de l'Univers
    et du Reste
[<small>du moins selon le livre <em>Le guide du voyageur galactique</em></small>] dans son journal.</p>

<h2>Écrire des textes</h2>
<p>Dans le jargon de la programmation, un <em>caractère</em> est n'importe quelle lettre,
chiffre ou symbole qui peut être imprimé, et une <em>chaîne de caractères</em>, ou plus
simplement une <em>chaîne</em>, est n'importe quelle combinaison de caractères pouvant être
imprimés.  Par exemple, exécutez les instructions suivantes: </p>
<pre class="jscode">écrit("Bonjour monde!");
écrit('Bonjour encore.');</pre>
<p>Notez que les guillemets <b>anglais</b> qui encadrent la <em>chaîne</em> doivent être semblables, soient
doubles, ", ou simples, ", doivent être les mêmes; à noter que ce ne sont <b>pas</b> des guillemets français
« ».  Si vous voulez inclure un guillemet dans une chaîne, vous pouvez soit utiliser des guillemets
d'un type différent pour encadrer la chaîne, ou les précéder du <em>caractère d'échappement</em> <code>\</code>.
</p>
<pre class="jscode">écrit("Ajourd'hui.");
écrit('Aujourd\'hui.');
</pre>
<p>On peut combiner les chaînes en utilisant le symbole d'addition <code>+</code>
 </p>
<pre class="jscode">écrit("Au revoir! " + "Et merci pour tout.");</pre>
<p>Vous pouvez également débuter une nouvelle ligne en utilisant la <em>séquence d'échappement</em>
<code>\n</code></p>
<pre class="jscode">écrit("Merci. \nEssayez encore");</pre>

<h2>Reeborg connaît les maths</h2>
<p>Exécutez le programme suivant et observez le résultat dans le journal de Reeborg. </p>
<pre class="jscode">écrit( 2 + 3 );  // addition
écrit( 2 * 3 );  // multiplication
écrit( 3 - 2 );  // soustraction
écrit( 6 / 2 );  // division
écrit( 1 + 3 * 2 ); // multiplication avant addition
écrit( (1 + 3) * 2 );  // Les parenthèses indiquent l'ordre des opérations </pre>
<h2>Utilisation des variables</h2>
<p>Nous avons déjà vu le mot-clé <code>var</code>.  Utilisons-le à nouveau dans un contexte
mathématique.</p>
<pre class="jscode">var longueur, largeur, aire;
longueur = 4;
largeur = 6;
aire = longueur * largeur;  // aire d'un rectangle
écrit(aire);  // imprimera 24</pre>
<p>Essayez!</p>
<h2>Avis</h2>
<p>Combiner des chaînes et des nombres peut donner des résultats inattendus:
</p>
<pre class="jscode">écrit("2" + 2);</pre>
<p><b>Important</b>: le <em>caractère</em> "2" n'est pas le même que le <em>chiffre</em> 2.</p>
<p>Finalement, notez que les espaces autour des opérateurs comme <code>+</code>, sont ignorés par Javascript;
cependant, ils peuvent faciliter la lecture (et la compréhension) pour les humains. </p>
<a class="left-link" href="Javascript:void(0);" onClick="load_page('harvest3')">Précédent</a>
<a class="right-link" href="Javascript:void(0);" onClick="load_page('increment')">Suivant</a>