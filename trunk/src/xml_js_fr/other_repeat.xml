<nav>

<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('better_repeat')">Précédent</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('toc')">Table des matières</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('more')">Suivant</a>

</nav>
<h1>Une autre façon de répéter</h1>

<p>Dans cette leçon, nous présentons une façon différente de répéter une instruction
    donnée.  Supposons que nous voulions <em>tourner à droite</em> ou <em>faire demi-tour</em>
    mais que nous aimerions n'avoir qu'un seul nom de fonction à mémoriser.  Une façon
    de faire ceci serait la suivante:</p>
<pre class="jscode">function tourne(nb){
    for (var i = 0; i < nb; i++) {
        tourne_à_gauche();
    }
}</pre>

<p>Si on utilisait cette définition, <code>tourne_à_droite()</code> serait simplement
<code>tourne(3)</code> et <code>demi-tour()</code> serait
<code>tourne(2)</code>.  Essayez!</p>

<h2>Comportement par défaut</h2>

<p>Vous souvenez-vous que <code>prend()</code> et <code>prend("jeton")</code> sont équivalents?
Ce serait bien d'avoir quelque chose de semblable pour <code>tourne()</code> où
<code>tourne()</code>, sans argument, serait équivalent à une seule instruction
<code>tourne_à_gauche()</code>.</p>
<p>On peut faire ceci de la façon suivante:</p>
<pre class="jscode">function tourne(nb){
    nb = nb || 1;
    for (var i = 0; i < nb; i++) {
        tourne_à_gauche();
    }
}</pre>
<p>Dans l'exemple ci-dessus, nous avons utilisé le <b>symbole logique OU</b>, <code>||</code>,
que nous verrons en plus de détails plus tard.  Considérez ceci comme un simple exemple
pour aiguiser votre appétit.  Cela dit, voici une brève explication:</p>
<ul><li><code>a || b</code> est égal à <code>b</code> si <code>a</code> est faux
(<code>false</code>) ou non définie (<code>undefined</code>).</li>
<li>Si l'argument d'une fonction n'est pas spécifié, la valeur de la variable
    correspondante à l'intérieur de la fonction est <code>undefined</code>;
    lorsque ceci arrive, <code>nb</code> prend la valeur 1.</li>
<li>Notez que, si l'argument spécifié est une nombre inférieur à 1, ou si
c'est une chaîne de caractères, la boucle <code>for</code> n'est pas exécutée
et Reeborg ne tourne pas! </li></ul>

<p>Essayez!</p>

<a class="left-link" href="Javascript:void(0);" onClick="load_page('better_repeat')">Précédent</a>
<a class="right-link" href="Javascript:void(0);" onClick="load_page('more')">Suivant</a>
