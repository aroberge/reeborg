<nav>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('hilo_game')">Précédent</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('toc')">Table des matières</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('rock_paper_scissors')">Suivant</a>
</nav>

<h1>Briser la boucle</h1>

<p>Lorsque vous étiez à modifier le code du jeu de devinette des nombres et à vérifier qu'il fonctionnait
    correctement, vous avez fort probablement souhaité pouvoir l'interrompre.  Malheureusement, une fois
    dans la boucle, la seule façon d'en sortir était de satisfaire la condition de cette boucle.
    Parfois il y a une autre façon de sortir d'une boucle en utilisant le mot-clé <code>break</code>.</p>

<p>Lorsqu'une instruction <code>break</code> est exécutée à l'intérieur d'une boucle <code>while</code> ou
    une boucle  <code>for</code>, Javascript cesse l'exécution des instructions à l'intérieur de la
    boucle et "saute" à l'instruction suivant immédiatement cette boucle.  Pour illustrer ceci,
    nous allons utiliser un "code secret": si le joueur soumet -1 comme valeur d'un nombre, nous
    allons utiliser <code>break</code> pour terminer la boucle. </p>

<pre class="jscode">var réponse, devine, nom_du_joueur, on_joue;

nom_du_joueur = prompt("Quel est votre nom?");
on_joue = confirm("Bonjour " + nom_du_joueur + "!  Jouons à un jeu!");

while(on_joue) {
    réponse = Math.floor(Math.random()*100) + 1;
    devine = parseInt(prompt("Choisissez un nombre entre 1 et 100."), 10);

    while (devine !== réponse) {
        if (devine === -1) {   // on vérifie pour le code secret
            break;
        } else if (devine < réponse) {
            devine = parseInt(prompt(devine + " est trop petit; essayez à nouveau."), 10);
        }
        else {
            devine = parseInt(prompt(devine + " est trop grand; essayez à nouveau."), 10);
        }
    }

    on_joue = confirm(réponse + " est la réponse!\n On joue à nouveau?");
}

alert("Au revoir " + nom_du_joueur);
</pre>
<p>Comme vous pouvez le vérifier, ceci fonctionne bien pour terminer la boucle
    <em>intérieure</em>, où on devine le nombre; cependant, ça requiert une autre étape
    pour confirmer qu'on veut cesser complètement de jouer puisqu'on doit alors sortir
    de la boucle <em>extérieure</em>.   Javascript nous donne l'option de sortir d'une
    boucle spécifique en utilisant des <b>étiquettes</b>.  Une étiquette est un "mot" qui
    serait valable comme nom de variable ou comme nom de fonctions.  Lorsqu'on
    utilise des étiquettes, on spécifie laquelle on choisie via l'énoncé
    <code>break étiquette</code>.  Voici une autre version du programme qui
    utilise les étiquettes.</p>


<pre class="jscode">var réponse, devine, nom_du_joueur, on_joue;

nom_du_joueur = prompt("Quel est votre nom?");
on_joue = confirm("Bonjour " + nom_du_joueur + "!  Jouons à un jeu!");

boucle_du_jeu:   // étiquette pour boucle extérieure
while(on_joue) {
    réponse = Math.floor(Math.random()*100) + 1;
    devine = parseInt(prompt("Choose a number between 1 and 100."), 10);

    boucle_de_devinette:    // étiquette pour boucle intérieure
    while (devine !== réponse) {
        if (devine === -1) {
            break boucle_de_devinette;  // on termine la boucle intérieure
        } else if (devine === -2){
            break boucle_du_jeu;      // on termine la boucle extérieure
        } else if (devine < réponse) {
            devine = parseInt(prompt(devine + " est trop petit; essayez à nouveau."), 10);
        }
        else {
            devine = parseInt(prompt(devine + " est trop grand; essayez à nouveau."), 10);
        }
    }

    on_joue = confirm(réponse + " est la réponse!\n On joue à nouveau?");
}

alert("Au revoir " + nom_du_joueur);
</pre>
<p><b>Jouez et amusez-vous!</b></p>
<h2>Veuillez noter ...</h2>
<p><code>break</code> sans étiquette est souvent utilisé en Javascript.
Plusieurs personnes évitent d'utiliser les étiquettes parce qu'elles trouvent que
ça peut rendre un programme plus difficile à lire et à comprendre.  En fait, plusieurs
autres langages de programmation (comme Python) ont des énoncés <code>break</code>
mais n'ont pas d'étiquettes.</p>

<a class="left-link" href="Javascript:void(0);" onClick="load_page('hilo_game')">Précédent</a>
<a class="right-link" href="Javascript:void(0);" onClick="load_page('rock_paper_scissors')">Suivant</a>




