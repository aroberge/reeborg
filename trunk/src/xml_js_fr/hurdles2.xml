<nav>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('au_but')">Précédent</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('toc')">Table des matières</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('else')">Suivant</a>
</nav>
<h1>Encore les haies!</h1>
<p>Examinez les mondes <span class="world">Haies&nbsp;1</span> et
<span class="world">Haies&nbsp;2</span>.  Ignorez pour l'instant le but à atteindre
(la maison de Reeborg).  Un programme qui permettrait à Reeborg de terminer la course
pourrait être constitué d'une alternance des deux instructions suivantes:
</p>
<ul><li><code>avance();</code></li>
<li><code>saute();</code></li></ul>
<p>en autant qu'on ait une définition appropriée pour  <code>saute()</code>.
Si vous pouviez inclure une condition (énoncé <code>if</code>) à quelque part pour
vérifier que vous avez atteint le but, vous pourriez alors définir une fonction
que nous pourrions appeler <code>avance_et_saut_jusqu_au_but()</code>
de telle sorte qu'un programme unique suffirait pour les mondes <span class="world">Haies&nbsp;1</span> et
<span class="world">Haies&nbsp;2</span>:</p>
<pre class="jscode">
répète(avance_et_saute_jusqu_au_but, 42);</pre>
<p>Écrivez un tel programme et assurez-vous qu'il permette à Reeborg de terminer la course.</p>
<p><b>Est-ce que ce programme pourrait permettre à Reeborg de terminer la course
    <span class="world">Haies&nbsp;4</span>?</b></p>

<a class="left-link" href="Javascript:void(0);" onClick="load_page('au_but')">Précédent</a>
<a class="right-link" href="Javascript:void(0);" onClick="load_page('else')">Suivant</a>