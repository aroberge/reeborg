<nav>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('rock_paper_ciseaux')">Précédent</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('toc')">Table des matières</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('switch')">Suivant</a>
</nav>

<h1>Opérateurs logiques</h1>

<p>Javascript a deux opérateurs <em>logiques</em> (également appelés <em>booléens</em> ):
<code>||</code>, qui signifie "ou", ainsi que <code>&amp;&amp;</code> qui signifie "et".
Il peuvent être utilisés pour obtenir des <em>tables de vérité</em>. Par exemple, si
on a <code>A || B</code>, le résultat sera <b>vrai</b> (<code>true</code>) si l'une
des deux valeurs, <code>A</code> ou <code>B</code> est vrai.  Ainsi, nous avons:
</p>
<ul><li><code>true || true</code> est <code>true</code></li>
<li><code>true || false</code> est <code>true</code></li>
<li><code>false || true</code> est <code>true</code></li>
<li><code>false || false</code> est <code>false</code></li></ul>

<p>Pour l'opérateur logique <b>et</b>, <code>&amp;&amp;</code>, il faut que les
deux quantités soient vraies pour que le résultat soit vrai.  Ainsi, nous avons:
</p>
<ul><li><code>true &amp;&amp; true</code> est <code>true</code></li>
<li><code>true &amp;&amp; false</code> est <code>false</code></li>
<li><code>false &amp;&amp; true</code> est <code>false</code></li>
<li><code>false &amp;&amp; false</code> est <code>false</code></li></ul>

<p>Nous allons permettre au joueur humain d'identifier leur choix "d'arme" soit
    par la première lettre ou par le nom en entier.  Afin d'éviter à avoir deux
    branches <code>if</code> par "arme", nous allons utiliser le symbole logique
    <code>||</code> pour nous aider à écrire cette fonction:</p>

<pre class="jscode">function choix_humain() {
    var sélection = prompt("Entrez (r)oche, (p)apier ou (c)iseaux");
    if (sélection === "r" || sélection === "roche") {
        return "roche";
    } else if (sélection === "p" || sélection === "papier") {
        return "papier";
    } else if (sélection === "c" || sélection === "ciseaux") {
        return "ciseaux";
    } else {
        alert(sélection + " n'est pas un choix valide.");
        return sélection;
    }
}</pre>
<p>Notez que nous avons inclus la possibilité que le choix qui a été fait
comporte une erreur.</p>
<p>Vous voudrez peut-être tester cette fonction avec le code suivant:</p>
<pre class="jscode">var choix = 0;
while (choix !== "q" ) {  // nous allons utiliser "q" pour "quitter"
    choix = choix_humain();
    écrit(choix);
}</pre>
<p>C'est <b>toujours</b> une bonne idée de tester chaque fonction
individuellement afin d'identifier les erreurs (bogues) le plus tôt possible
et de les éliminer pendant que le nombre de lignes de code est relativement petit.
</p>

<p>Une fois que vous aurez testé la fonction, passez à la leçon suivante pour apprendre
    à utiliser <code>switch</code>, <code>case</code> et <code>default</code>, pour pouvoir
    terminer le reste du programme. </p>

<a class="left-link" href="Javascript:void(0);" onClick="load_page('rock_paper_ciseaux')">Précédent</a>
<a class="right-link" href="Javascript:void(0);" onClick="load_page('switch')">Suivant</a>