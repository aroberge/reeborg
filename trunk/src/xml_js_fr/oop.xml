<nav>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('more')">Précédent</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('toc')">Table des matières</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('new')">Suivant</a>
</nav>

<h1>La notation "point"</h1>

<p>Nous allons bientôt apprendre les rudiments d'une méthode moderne de programmation appelée la
    Programmation Orientée Object (POO). Javascript n'est pas un langage POO; c'est un langage basé
    sur les prototypes mais, <b>pour les concepts de base couverts dans cette leçons</b>, les langages
    basés sur les prototypes et la POO sont essentiellement identiques.
</p>

<h2>Une vie de chien</h2>

<p>Milou est un chien.  Durant une journée typique il fait plusieurs actions: il mange, il court, il dort,
    etc.  Voici comment un programmeur utilisant un langage de POO pourrait écrire ceci.</p>

<pre class="jscode">var Milou = new Chien();  // "new" = nouveau
Milou.mange();
Milou.court();
Milou.dort();</pre>

<p>De plus, Milou a diverses qualités ou <em>attributs</em>; ce sont là des variables, semblables à
celles que nous avons vues auparavant, sauf qu'elles "appartiennent" à Milou.  Par exemple, Milou est petit
et son poil est blanc.  Voici comment un programmeur pourrait écrire ceci. </p>
<pre class="jscode">Milou.taille = "petit";
Milou.couleur_de_poil = "blanc";</pre>

</p>Dans le langage de la POO, nous dirions que:</p>

<ul>
    <li><code>Chien</code> est une <em>classe</em> d'<b>objets</b>.</li>
    <li><code>Milou</code> est un exemple concret (ou un objet spécifique) de la clase Chien.</li>
    <li><code>mange(), court()</code> et <code> dort()</code> sont des <b>méthodes</b> de la classe Chien;
    les méthodes sont essentiellements des fonctions telles que nous les avons vues auparavant, sauf
    qu'elles "appartiennent" à une classe ou un objet particulier.</li>
    <li><code>taille</code> et <code>couleur_de_poil</code> sont des attributs d'un objet; les attributs
    peuvent avoir toute valeur qu'une variable "ordinaire" pourrait avoir. </li>
    <li>Le lien entre un attribut ou une méthode et un objet est indiqué par un point (".") écrit
        entre les deux.</li>
</ul>
<p>Les objets peuvent avoir d'autres objets qui leur appartiennent, chacun avec ses méthodes ou ses
    attributs:</p>

<pre class="jscode">Milou.queue.remue();
Milou.queue.type = "touffue";
Milou.patte_avant_gauche.bouche();
Milou.tête.bouche.dents.canine.font_mal();
</pre>

<p>Voyons maintenant comment Reeborg utilise la notation "point".</p>

<a class="left-link" href="Javascript:void(0);" onClick="load_page('more')">Précédent</a>
<a class="right-link" href="Javascript:void(0);" onClick="load_page('new')">Suivant</a>

