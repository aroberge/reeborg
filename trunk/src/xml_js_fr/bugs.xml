<nav>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('turn_left')">Précédent</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('toc')">Table des matières</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('tokens1')">Suivant</a>
</nav>
<h1>Fichus bogues! </h1>
<p>Personne n'aime avoir à discuter au sujet des bogues en informatique.
    Mais, malheureusement,
    vous devez en savoir davantage à leur sujet et, surtout, apprendre
    comment vous en débarrasser.
</p>
<p>Cette leçon est un peu plus longue que les précédentes, mais je vous encourage
    à lire le tout au moins une fois.
</p>
<h2>Qu'est-ce qu'un bogue?</h2>
<p>L'origine du mot bogue, adapté de l'anglais <b>bug</b> qui signifie <b>insecte</b>,
est souvent attribué à un incident où un papillon de nuit a été trouvé
à l'intérieur de l'ordinateur Mark II de l'Université Harvard.
Cet insecte avait été trouvé par les membres d'une équipe menée par
l'illustre informaticienne, mathématicienne et jeune officier naval
Grace Murray Hopper, qui inventa par la suite le concept de compilateur
de langages informatiques.  Madame Grace Hopper, Ph.D., a également
atteint le titre d’amiral (<em>Rear Admiral</em>) dans la marine américaine.
</p>
<p>Ce papillon a été préservé, collé dans le journal de bord de Madame Hopper,
    tel qu'illustré ci-dessous.  Fait intéressant, on note une mention
    qui dit "First actual case of bug being found." qu'on pourrait traduire par
    <em>Premier cas actuel d'un bogue/insecte trouvé.</em>
</p>
<p><img src="src/images/first_bug.jpg" </p>
<h6>Picture adapted from the public archive of the
<a href="http://www.history.navy.mil/photos/pers-us/uspers-h/g-hoppr.htm">
U.S. Naval Historical Center </a></h6>
<p>En fait, la première utilisation du mot anglais bug dans un contexte technologique
    est attribuée à l'inventeur Thomas Edison.  Selon le dictionnaire Oxford,
    le texte suivant aurait été publié le 11 mars 1889 dans le journal
    Pall Mall Gazette:
</p>
<blockquote><cite>Mr. Edison, I was informed, had been up the two previous
nights discovering 'a bug' in his phonograph - an expression for solving a
difficulty, and implying that some imaginary insect has secreted itself
inside and is causing all the trouble.</cite></blockquote>
<p>Donc, il semblerait que le bogue original, bien qu'il ait fait référence
    à un insecte, en aurait été un <em>imaginaire</em>...
</p>
<p>Malheureusement, les bogues, bien qu'ils ne soient pas des insectes,
    ne sont pas imaginaires.
</p>
<h2>Composer avec les bogues</h2>
<p>Dans le jargon informatique, un bogue est une erreur qui fait qu'un
    programme se comporte d'une façon inattendue.  Si vous écrivez des
    programmes informatiques, tôt ou tard vous allez rencontrer des bogues.
    Les bons programmeurs cherchent à éliminer les bogues aussitôt que
    leur programme se comportent d'une manière inattendue.
</p>
<p>Les programmeurs incompétents disent que les bogues dans leurs
    programmes n'en sont pas, mais qu'il s'agit plutôt de <em>particularité</em>
    ou de <em>trait intéressant du caractère</em> de leur programme.
    <b>Vous</b> allez devenir de bons programmeurs, contrairement aux
    créateurs de Reeborg dont le programme est rempli de bogues.
</p>
<ol>
<li>Reeborg a une fuite d'huile.  De telle fuite sont dommageables pour
    l'environnement et pas très pratique pour Reeborg qui doit refaire le
    plein de façon périodique, lorsqu'il n'est pas occupé à accomplir
    les tâches que vous lui confiez.   Les créateurs de Reeborg
    prétendent qu'en fait il s'agit d'une caractéristique utile puisque
    ceci vous permet de suivre Reeborg à la trace, comme tout bon
    programmeur doit pouvoir faire dans ses programmes.
    Vous apprendrez plus tard à réparer cette fuite.  Et je vous montrerai
    une façon moins dommageable pour l'environnement afin de suivre
    ce que fait Reeborg; des techniques plus avancées utilisant des
    logiciels connus sous le nom de <b>débogueurs</b> vont au-delà
    de ce qui est couvert dans ces leçons.
</li>
<li>Le mécanisme de direction de Reeborg n'est pas utilisé correctement
    par le logiciel de Reeborg, ce qui fait que ce dernier ne peut que
    tourner vers la gauche.  Les créateurs de Reeborg, une fois de plus,
    prétendent qu'il s'agit là d'une caractéristique utile puisque ceci
    vous permet d'apprendre le concept de <b>fonctions</b>.
    Reeborg n'est pas d'accord.  Vous apprendrez sous peu comment
    accommoder tant bien que mal cette limitation de Reeborg et trouver
    une façon détournée pour lui permettre de faire des virages à droite.
    Beaucoup plus tard, vous apprendrez à véritablement réparer Reeborg
    pour lui permettre de tourner à droite aussi aisément qu'il peut déjà
    tourner à gauche.
</li>
<li>Reeborg possède une boussole lui permettant de déterminer dans quelle
    direction il va.  Malheureusement, une fois de plus, le logiciel de
    Reeborg a un bogue qui fait en sorte que Reeborg peut seulement dire
    s'il se dirige vers le nord ... ou non.  Vous apprendrez d'abord
    à composer avec ce bogue pour trouver une façon détournée de permettre à
    Reeborg de s'orienter correctement.  Plus tard, vous apprendrez à
    corriger le logiciel de Reeborg correctement.</li>
<li>Reeborg peut voir s'il y a un mur qui bloque son passage devant lui,
    et peut tourner la tête pour voir s'il y a un mur à sa droite.
    Malheureusement une <em>limitation</em> de son programme (ce qui
    est une expression malhonnête que les manufacturiers utilisent pour
    éviter de dire que leurs programmes ont des bogues) empêche Reeborg
    de déterminer correctement si un mur se trouve immédiatement à sa
    gauche.</li>
</ol>
<p>Pour déterminer la cause d'un bogue, il est parfois utile d'interrompre
    le flot normal d'un programme.  À cette fin, vous pouvez utiliser
    un ou plusieurs des trucs suivants:
</p>
<ol><li>
Vous pouvez <em>pauser</em> un programme en voie d'exécution simplement en cliquant
sur le bouton <b>pause</b> {pause_button}.
Ceci est semblable à ce qu'on appelle un <em>point d'arrêt</em> ("breakpoint")
dans un programme.
</li>
<li>Plutôt que de cliquer sur le bouton de pause, vous pouvez insérer l'instruction
    <code>pause();</code> à n'importe quel point du programme, ce qui aura exactement
    le même effet.</li>
<li>Vous pouvez exécuter un programme <em>une instruction à la fois</em> en
cliquant sur le bouton <em>exécution d'une seule instruction</em> {step_button}.</li>
<li>Vous pouvez changer la vitesse d’exécution (le temps entre deux instructions)
    à n'importe quel point à l'intérieur d'un programme; j'expliquerai comment faire
    ceci plus tard.</li>
<li>Vous pouvez demander à Reeborg d'écrire certaines notes à n'importe
    quel point à l'intérieur d'un programme; je vous montrerai également
    comment faire ceci plus tard.</li>
<li>Vous pouvez avoir certaines informations apparaître automatiquement quant
    au nombres de jetons (objet qui sera présenté bientôt) qui sont transportés
    par quelques robots (oui, il est possible d'en avoir plusieurs ...), ainsi
    que la position de ces robots.  Pour faire ceci, il suffit d'insérer l'instruction
 <pre class="jscode">DEBUG.ON = true;</pre> n'importe où dans un programme et
 ceci sera considéré valide pour tout le programme. </li>
<li>Finalement, vous pouvez arrêter complètement l'exécution d'un programme en
    cliquant le bouton <b>stop</b> {stop_button}; malheureusement, ceci ne
    fonctionnera pas toujours si vous avez ce qu'on appelle une boucle infinie
    hors du contrôle de Reeborg.  Dans le pire des cas, vous pouvez simplement
    recharger la page web et redémarrer à zéro.</li>
</ol>
<a class="left-link" href="Javascript:void(0);" onClick="load_page('turn_left')">Précédent</a>
<a class="right-link" href="Javascript:void(0);" onClick="load_page('tokens1')">Suivant</a>