<nav>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('recursion3')">Précédent</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('toc')">Table des matières</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('recursion5')">Suivant</a>
</nav>
<h1>Compter sur la récursivité</h1>
<p>Reeborg sait comment compter ... mais nous n'avons pas encore vu ceci et nous ne le
    verrons pour quelque temps encore.  Si vous avez appris la programmation ailleurs,
    vous savez probablement comment utiliser des variables numériques pour permettre à
    Reeborg de compter.  Si c'est le cas, je vous demande de ne <b>pas</b> les utiliser
    dans ce qui suit.</p>
<p>Sélectionnez le monde <span class="world">Jetons&nbsp;5</span>.  Là où Reeborg se
trouve, il y a un seul jeton.  Vous savez comment demander à Reeborg de prendre un
jeton et d'avancer d'un pas.  Je vous demande de faire en sorte que Reeborg répète
ces deux instructions jusqu'à ce qu'il se trouve à un endroit où il n'y a pas de
jetons. À cet endroit, Reeborg doit déposer tous les jetons qu'il a ramassé puis
se déplacer au carré suivant.</p>
<p>Le même programme peut être utilisé pour le monde <span class="world">Jetons&nbsp;6</span>,
qui a un nombre différent de jetons; vous ne pouvez donc pas utiliser la fonction
<code>répète()</code> si vous voulez avoir un seul programme pour les deux mondes.</p>
<p>Reeborg commence avec un nombre illimité de jetons dans ses poches; vous ne pouvez
    donc pas utiliser le test <code>a_des_jetons()</code> pour permettre à Reeborg
    de déterminer quand il doit arrêter de déposer des jetons.
</p>
<p>Pour satisfaire à toutes les contraintes mentionnées, vous allez utiliser un programme
    récursif, dont l'esquisse suit, pour résoudre ces problèmes. </p>
<pre class="jscode">function collectionne() {
    // instruction
    // instruction
    if ( condition ) {
        // instruction
    }
    //instruction
}

collectionne ();
avance(); </pre>
<a class="left-link" href="Javascript:void(0);" onClick="load_page('recursion3')">Précédent</a>
<a class="right-link" href="Javascript:void(0);" onClick="load_page('recursion5')">Suivant</a>