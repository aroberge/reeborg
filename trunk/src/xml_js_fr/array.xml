<nav>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('teleport4')">Précédent</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('toc')">Table des matières</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('array2')">Suivant</a>
</nav>

<h1>Les tableaux de Javascript </h1>
<p>Je ne sais pas si c'est le cas pour vous, mais moi, je commence à avoir fin.  Ce serait tellement bon
    d'avoir une délicieuse mousse au chocolat à déguster.</p>
<h2>Recette de mousse au chocolat</h2>

<ul><li>Ingrédients</li>
<ul><li>4 oeufs</li>
<li>100 g de sucre</li>
<li>250 g de chocolat noir mi-sucré  </li>
<li>30 ml de poudre de cacao</li></ul></ul>
<p>Pour préparer cette mousse, il faut suivre une recette:</p>
<ul><li>Préchauffer le four à 180 C </li>
<li>Séparez le blanc et le jaune des oeufs </li>
<li><em>etc.</em></li></ul>

<p>Une recette ressemble beaucoup à un programme informatique: il s'agit d'une suite d'instructions
    que l'on doit suivre pour accomplir un but recherché.  Je crois qu'on en a déjà plein notre
    assiette à apprendre la programmation et je vais donc terminer ici ces leçons sur la cuisine
    pour retourner à Javascript, et plus particulièrement parler de <b>tableaux</b>.
</p>


<h2>Tableaux</h2>
<p>Voici la liste d'ingrédients ci-dessus présentés sous forme d'un tableau Javascript </p>
<pre class="jscode">ingrédients = ["4 oeufs", "100 g de sucre",
"250 g de chocolat noir mi-sucré ",
"30 ml de poudre de cacao"]</pre>
<p>Au lieu d'utiliser la notation simplifiée<code>[ ... ]</code>, nous aurions
pu définir le tableau (<em>array</em> en anglais) comme ceci: </p>
<pre class="jscode">ingrédients = new Array("4 oeufs", "100 g de sucre",
"250 g de chocolat noir mi-sucré ",
"30 ml de poudre de cacao")</pre>

<p>Les tableaux Javascript ont diverses méthodes telles que <code>sort</code>, <code>reverse</code>,
<code>shift</code>, etc.  Vous pouvez trouver une description complète au
<a href="https://developer.mozilla.org/en/docs/JavaScript/Reference/Global_Objects/Array">Mozilla's Developers site</a>.
Ici, nous présenterons seulement deux méthodes, soit <code>push</code> et <code>pop</code>,
ainsi qu'une propriété ou attribut, <code>length</code>.</p>
<p>Assurez-vous que le journal de Reeborg soit visible et exécutez le programme suivant: </p>
<pre class="jscode">var liste = ["abc", 1, 10.4];

écrit( liste );
écrit( liste[0] );

écrit( liste.length );
écrit("-----");

for (var i=0; i < liste.length; i++ ){
    écrit( liste[i] );
}

écrit("-----");
liste.push(42);
écrit( liste );
écrit( liste.length );

écrit("-----");
écrit( liste.pop() );
écrit( liste );
écrit( liste.length );</pre>
<p>Quelques points à noter:</p>
<ul>
    <li>Les éléments d'un tableau peuvent être obtenu en utilisant la notation crochet:
            <code>[indice_du_tableau]</code></li>
    <li>Le premier élément a 0 comme indice. </li>
    <li><code>nom_du_tableau.length</code> réfère au nombre d'éléments du tableau. </li>
    <li><code>push()</code> est utilisé pour ajouter un élément à la fin du tableau. </li>
    <li><code>pop()</code> élimine le dernier élément du tableau et le retourne (via <code>return</code>) </li>
</ul>

<a class="left-link" href="Javascript:void(0);" onClick="load_page('teleport4')">Précédent</a>
<a class="right-link" href="Javascript:void(0);" onClick="load_page('array2')">Suivant</a>

