<nav>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('else')">Précédent</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('toc')">Table des matières</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('not')">Suivant</a>
</nav>
<h1>Toujours les haies!</h1>
<p>Reeborg vit au Canada où non seulement il peut pleuvoir ou faire soleil, mais où la neige
    peut également tomber ... habituellement pas les trois (pluie, neige et soleil) en même temps ...
 <small> mais ça arrive parfois...</small> Supposons que seulement une des trois choses peut arriver
 à la fois.  Dans ce cas, Reeborg pourrait se retrouver dans la situation suivante:</p>
<pre class="jscode">if ( il_pleut() ) {
    joue_dans_la_maison();
} else if ( il_neige() ){
    va_skier();
} else {
    va_nager(); // en supposant qu'il fait chaud!
}</pre>
<p>Notez l'utilisation de <code>else</code> pour les choix 2 et 3, et le <code>if</code> additionnel
pour le deuxième cas.  Si on devait considérer d'autres types d'intempéries, comme la grêle, les
orages, le brouillard, le crachin, etc., on pourrait ajouter d'autres choix en utilisant les
blocs de code <code>else if {...}</code>.
</p>

<h2>Comme penser aux énoncés <code>if / else if / ... / else</code></h2>
<p>Une série d'énoncés <code>if / else if / ... / else</code> est équivalente
à insérer le <b>premier</b> bloc de code dont la condition est équivalente à <code>true</code>.
Donc</p>
<pre class="jscode">if ( false ) {
    fonction_1();
} else if ( true ){
    fonction_2();
} else if ( true ){
    fonction_3();
} else {
    fonction_4();
}</pre>
est équivalent à
<pre class="jscode">fonction_2();</pre>
<p>alors que </p>
<pre class="jscode">if ( false ) {
    fonction_1();
} else if ( false ){
    fonction_2();
} else if ( false ){
    fonction_3();
} else {
    fonction_4();
}</pre>
<p>est équivalent à </p>
<pre class="jscode">fonction_4();</pre>
<p>etc.</p>

<h2>De retour aux haies</h2>
<p>Deux leçons passées, vous avez écrit un programme qui permettait à Reeborg
de terminer les courses
<span class="world">Haies&nbsp;1</span> et
<span class="world">Haies&nbsp;2</span> mais pas <span class="world">Haies&nbsp;3</span>.
Votre programme ressemblait probablement à ce qui suit: </p>
<pre class="jscode">
function saute() {
    // un bloc de code
}

function avance_et_saute_jusqu_au_but () {
    avance();
    if ( au_but() ) {
        terminé();
    }
    saute();
}

répète(avance_et_saute_jusqu_au_but, 42);</pre>
<p>Ce programme ne fonctionnait pas avec <span class="world">Haies&nbsp;3</span>
parce qu'il suppose que les haies sont espacées régulièrement, ce qui n'est pas le
cas pour <span class="world">Haies&nbsp;3</span>.  Utilisons la condition
<code>rien_devant()</code> et le mot-clé <code>else</code> pour résoudre ce problème.
</p>
<p>Le programme suivant devrait faire l'affaire en autant que vous ajoutiez les
    instructions qui manquent.</p>
    <pre class="jscode">
function saute() {
    // un bloc de code
}

function avance_et_saute_jusqu_au_but () {
    if ( au_but() ) {
        // instruction ...
    } else if ( rien_devant() ) {
        // instruction ...
    } else {
        // instruction ...
    }
}

répète(avance_et_saute_jusqu_au_but, 42);</pre>

<p>Souvenez-vous que la série d'énoncés <code>if/else</code> résulte en un seul bloc
de code qui sera exécuté.</p>

<p>Écrivez-donc un tel programme et assurez-vous qu'il fonctionne correctement.</p>
<p><b>Est-ce que ce programme pourrait fonctionner tel quel pour le monde </b>
<span class="world">Haies&nbsp;4</span>?  La réponse est <em>probablement</em> non ...
mais étudiez-le pour tirer votre propre conclusion avant de le tester pour vérifier
votre hypothèse.</p>

<a class="left-link" href="Javascript:void(0);" onClick="load_page('else')">Précédent</a>
<a class="right-link" href="Javascript:void(0);" onClick="load_page('not')">Suivant</a>