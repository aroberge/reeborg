<nav>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('turn_right')">Précédent</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('toc')">Table des matières</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('teleport')">Suivant</a>
</nav>

<h1>Les prototypes</h1>

<p>Comme nous l'avons mentionné, Javascript est un langage basé sur les prototypes: nous pouvons
    ajouter des méthodes (ou des attributs) à des objets en les ajoutant au <b>prototype</b> de l'objet.
    La syntaxe utilisée est la suivante:</p>
<pre class="jscode">un_objet.prototype.nouvelle_chose = une_définition;</pre>
<p>Par exemple, voici comment on peut ajouter une nouvelle méthode <code>tourne_à_droite</code> method to <code>RobotUsagé</code>:</p>

<p>Sélectionnez le monde <span class="world">Vide</span> dans lequel il n'y a aucun robot.
Ensuite, définissez la fonction suivante: </p>

<pre class="jscode">RobotUsagé.prototype.tourne_à_droite = function () {
    this.tourne_à_gauche();
    this.tourne_à_gauche();
    this.tourne_à_gauche();
};</pre>
<p>En Javascript, le mot-clé <code>this</code> sera remplacé par le nom du robot auquel on demandera de
tourner à droite. </p>

<pre class="jscode">var Reeborg = new RobotUsagé();
var Erdna = new RobotUsagé();
Reeborg.avance();
Reeborg.tourne_à_droite();
Erdna.tourne_à_droite();</pre>

<p><b>Essayez!</b></p>
<p>Comme vous pouvez le constater, on peut maintenant utiliser exactement la même syntaxe pour les
    virages à droite et les virages à gauche: <code>nom_du_robot.méthode()</code>.
    Cela n'a toujours pas permis de réparer Reeborg, car il doit toujours faire trois virages à gauche
    pour obtenir l'équivalent d'un seul virage à droite ... mais on verra comment réparer ceci éventuellement,
    c'est promis.  Auparavant, on apprendra à Reeborg à se téléporter!   Mais, même avant cela, je dois
    vous faire part d'un petit secret.</p>

<h2>Un secret</h2>
<p>Les fabricants (anglophones) de Reeborg avaient commencé le travail de réparation pour qu'il puisse tourner
    à droite correctement.  Ils ont mis en place une méthode dite <em>privée</em>, ce que les
    programmeurs indiquent parfois en ajoutant un ou deux symboles de soulignement "_" devant
    le nom de la méthode ou de l'attribut privé.</p>
<p>Essayez donc d'exécuter le code suivant pour voir que Reeborg <b>peut</b> tourner à droite directement! </p>
<pre class="jscode">var Reeborg = new RobotUsagé();

Reeborg.tourne_à_gauche();

for (var i=0; i < 4; i++) {
    Reeborg.avance();
    Reeborg.avance();
    Reeborg.__turn_right();
}</pre>

<a class="left-link" href="Javascript:void(0);" onClick="load_page('turn_right')">Précédent</a>
<a class="right-link" href="Javascript:void(0);" onClick="load_page('teleport')">Suivant</a>

