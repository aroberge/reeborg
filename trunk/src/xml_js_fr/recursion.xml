<nav>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('center2')">Précédent</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('toc')">Table des matières</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('recursion2')">Suivant</a>
</nav>
<h1>Récursivité</h1>
<p>Si vous faites une recherche sur Internet pour la définition de récursivité vous
verrez <b>parfois</b> (et, <b>très souvent</b>, pour la définition du terme anglais <em>recursion</em>)
quelque chose comme ce qui suit:</p>
<dl>
<dt><b>Récursivité</b></dt>
<dd>Voir récursivité.</dd>
</dl>
<p>Ceci est une blague ... qui malheureusement peut donner la mauvaise idée de ce qu'est la récursivité.
</p>
<p>Si vous étiez un programme informatique qui tentait d'interpréter la définition ci-dessus,
    vous seriez pris dans une boucle infinie.  Puisque vous lisez ce texte, c'est soit que
    vous avez sauté par-dessus la définition <b>ou</b> que vous ne lisez pas comme un ordinateur.
</p>
<p>La récursivité en informatique est parfois décrite comme un concept difficile à comprendre.
    Ce n'est pas le cas: si vous comprenez les boucles, vous pouvez comprendre la récursivité.</p>
<p>La récursivité est une démarche qui fait référence à l'objet de la démarche.
    Pour les programmes informatiques, ceci veut dire qu'on répète des instructions ...
    un peu comme dans une boucle.  Et, comme pour les boucles, il est important de ne pas
    répéter <em>à l'infini</em>.
</p>
<p>Le plus simple exemple qu'on peut donner est celui d'une fonction qui s'invoque elle-même
    basé sur une certaine condition. </p>
<pre class="jscode">function récursive(){
...
if (tâche_pas_terminée()){
    récursive();  // la même fonction est invoquée ...
}</pre>
<p>Prenons un exemple concret.  Sélectionnez <span class="world">Maison&nbsp;1</span>
et exécutez le programme suivant:</p>
<pre class="jscode">function va_au_but(){
    avance();
    if (!au_but()) {
        va_au_but();
    }
}

// définition complétée; on y va!
va_au_but();</pre>
<p>Lorsque vous aurez exécuté le programme ci-dessus et compris comment il fonctionne,
    passez à la leçon suivante où nous verrons un exemple un peu plus compliqué.
</p>
<a class="left-link" href="Javascript:void(0);" onClick="load_page('center2')">Précédent</a>
<a class="right-link" href="Javascript:void(0);" onClick="load_page('recursion2')">Suivant</a>