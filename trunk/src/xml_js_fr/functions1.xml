<nav>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('rule3')">Précédent</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('toc')">Table des matières</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('turn_around')">Suivant</a>
</nav>
<h1>Comment penser à <code>function</code></h1>

<p>Vous venez tout juste d'apprendre comment définir des fonctions en Javascript.
Au cas où ce ne serait pas très clair pour vous, voici façon de comprendre
les fonctions.</p>
<p>Supposons que vous ayez le programme suivant</p>
<pre class="jscode">
function tourne_à_droite () {  // début du bloc de code
    tourne_à_gauche();
    tourne_à_gauche();
    tourne_à_gauche();
}  // fin du bloc de code

avance();
tourne_à_droite();
avance();
</pre>
<p>Ceci est équivalent à </p>
<pre class="jscode">avance();
// début du bloc de code pour tourne_à_droite
tourne_à_gauche();
tourne_à_gauche();
tourne_à_gauche();
// fin du bloc de code
avance();
</pre>
<p>En d'autres mots, <code>function</code> définit un nom que l'on peut utiliser
comme synonyme pour représenter un bloc de code; à chaque fois que l'on
voit le synonyme être <em>invoqué</em> [c'est-à-dire que le nom apparaît suivi
de parenthèses <code>()</code>], on peut penser à ceci comme étant équivalent
à insérer à la place du synonyme le bloc de code constituant le corps de la
fonction tel quel à cet endroit. </p>
<a class="left-link" href="Javascript:void(0);" onClick="load_page('rule3')">Précédent</a>
<a class="right-link" href="Javascript:void(0);" onClick="load_page('turn_around')">Suivant</a>