<nav>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('diary')">Précédent</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('toc')">Table des matières</a>
<a class="fake_button blue-gradient" href="Javascript:void(0);" onClick="load_page('while_num')">Suivant</a>
</nav>

<h1>Incrément</h1>

<p>Assurez-vous d'avoir les panneaux <b>Éditeur</b>, <b>Monde</b> et <b>Journal</b> ouverts.
Sélectionnez le monde <span class="world">Autour&nbsp;1</span> et ajustez la largeur du
panneau <b>Monde</b> pour que vous puissiez voir tout le monde de Reeborg.  (Vous pouvez
ajustez la largeur en "saisissant" la ligne pointillée entre les panneaux et en la
glissant avec la souris.)</p>
<p>Supposons que nous voulons compter le nombre de pas pris par Reeborg pour atteindre
    le mur à droite à partir de son point de départ.  Une façon de faire ceci
    est d'utiliser une variable que je vais appeler <code>nombre_de_pas</code> et
    à laquelle je vais attribuer 0 comme valeur initiale.  Puis, à chaque fois
    que Reeborg prendra un pas, j'ajouterai 1 à la valeur <em>précédente</em> de
    <code>nombre_de_pas</code>.  En Javascript, ceci est fait en utilisant la
    syntaxe suivante:</p>
<pre class="jscode">nombre_de_pas = nombre_de_pas + 1;</pre>
<p><b>Ceci n'est pas une équation mathématique!</b>  Si on avait une équation mathématique,
une variable du côté gauche du signe d'égalité aurait la même valeur que si elle se trouvait
à droite du même signe.  En Javascript, et dans plusieurs autres langages de programmation,
le symbole <code>=</code> est utilisé pour <em>affecter</em> une valeur: Javascript détermine
en premier la valeur de l'expression à la droite du signe <code>=</code>, puis utilise le nom
de la variable à gauche de ce signe comme aide-mémoire pour se rappeler de la valeur.
Ainsi, si nous avons</p>
<pre class="jscode">var n;
n = 1;
n = n + 3;
écrit(n);  // donne 4</pre>
<p>c'est équivalent à</p>
<pre class="jscode">var n;
n = 1;
n = 1 + 3;  // nous avons écrit "1" au lieu de "n"
écrit(n);  // donne 4</pre>
<p><b>Vérifiez par vous-mêmes!</b></p>
<p>Puisque ce type d'opération, connue sous le nom d'<em>incrémenter</em> une variable,
est fait très souvent, Javascript, et plusieurs autres langages de programmation, utilise
une notation raccourcie et l'opérateur <code>+=</code>:</p>
<pre class="jscode">var n;
n = 1;
n += 3;
écrit(n);  // donne 4</pre>
<p>Si la valeur par laquelle on veut <em>incrémenter</em> la variable est 1, on peut
utiliser une notation encore plus courte:</p>
<pre class="jscode">var n;
n = 1;
n++;
écrit(n);  // donne 2</pre>
<p><b>Essayez!</b></p>
<h2>Compter les pas</h2>
<p>Nous sommes maintenant prêts à écrire un programme qui permettra à Reeborg
    de compter les nombres de pas, en utilisant le monde <span class="world">Autour&nbsp;1</span>.
    Transcrivez le code suivant dans l'éditeur et exécutez-le.  Idéalement,
    vous devriez le modifier pour vérifier les autres façons d'incrémenter une
    variable décrites ci-dessus. </p>
<pre class="jscode">var nombre_de_pas = 0;

function avance_et_compte() {
    avance();
    nombre_de_pas++;
}

while (rien_devant()){
    avance_et_compte();
}

écrit(nombre_de_pas);  // devrait être 9</pre>
<h2>À votre tour</h2>
<p>Écrivez un programme qui fera en sorte que Reeborg fasse le tour du monde
    <span class="world">Autour&nbsp;1</span> tout en comptant le nombre
    de pas <b>ainsi que</b> le nombre de virages à gauche, écrivant le résultat
    dans son journal à la fin.  Vous devriez commencer par déposer un jeton pour indiquer
    la position de départ (et d'arrivée).</p>
<a class="left-link" href="Javascript:void(0);" onClick="load_page('diary')">Précédent</a>
<a class="right-link" href="Javascript:void(0);" onClick="load_page('while_num')">Suivant</a>