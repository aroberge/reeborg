from browser import window

RUR = window.RUR

# Keep in sync with src/js/lang/reeborg_fr.js

#confirmer = RUR.confirmer

au_but = RUR._at_goal_
au_but_orientation = RUR._at_goal_orientation_
construit_un_mur = RUR._build_wall_
rien_devant = RUR._front_is_clear_
a_des_jetons = RUR._has_token_
face_au_nord = RUR._is_facing_north_
avance = RUR._move_
depose = RUR._put_
jeton_ici = RUR._token_here_
rien_a_droite = RUR._right_is_clear_
objet_ici = RUR._object_here_
prend = RUR._take_
tourne_a_gauche = RUR._turn_left_
repete = RUR._repeat_
nombre_de_commandes = RUR._set_max_steps_

examine = RUR.inspect

ecrit = RUR.control.write
termine = RUR.control.done
son = RUR.control.sound
pense = RUR.control.think
dis = RUR.control.say
pause = RUR.control.pause

selectionne_monde = RUR.ui.select_world
selectionne_defi = RUR.ui.select_challenge


class _UsedRobot(object):
    def __init__(self, x=1, y=1, orientation='e', jetons=0):
        robot = RUR.robot.create_robot(x, y, orientation, jetons)
        self.body = robot
        RUR.world.add_robot(self.body)

    def avance(self):
        RUR.control.move(self.body)

    def au_but(self):
        return RUR.control.at_goal(self.body)

    def au_but_orientation(self):
        return RUR.control.at_goal_orientation(self.body)

    def construit_un_mur(self):
        RUR.control.build_wall(self.body)

    def rien_devant(self):
        return RUR.control.front_is_clear(self.body)

    def a_des_jetons(self):
        return RUR.control.has_token(self.body)

    def face_au_nord(self):
        return RUR.control.is_facing_north(self.body)

    def depose(self, arg="jeton"):
        RUR.control.put(self.body, arg)

    def jeton_ici(self):
        return RUR.control.token_here(self.body)

    def rien_a_droite(self):
        return RUR.control.right_is_clear(self.body)

    def objet_ici(self):
        return RUR.control.object_here(self.body)

    def prend(self, arg="token"):
        RUR.control.take(self.body, arg)

    def tourne_a_gauche(self):
        RUR.control.turn_left(self.body)


class RobotUsage(_UsedRobot):
    pass


class ReeborgError(Exception):
    def __init__(self, value):
        self.reeborg_says = value

    def __str__(self):
        return repr(self.reeborg_says)

window['ReeborgError'] = ReeborgError


def Help(obj):
    try:
        print(obj.__name__)
        print("   {}".format(obj.__doc__))
    except:
        pass
    for attr in dir(obj):
        if attr == "__class__":
            continue
        if hasattr(getattr(obj, attr), "__doc__"):
            if getattr(obj, attr).__doc__:
                print("\n{0}\n   {1}".format(attr, getattr(obj, attr).__doc__))
window['Help'] = Help
