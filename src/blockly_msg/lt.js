// modified for Reeborg!

// // This file was automatically generated.  Do not modify.
//
// 'use strict';
//

goog.provide('Blockly.Msg.en');
//
// goog.require('Blockly.Msg');
// Blockly.Msg["LOOPS_HUE"] is commented out at bottom for Reeborg



function blockly_init_lt () {

    Blockly.Msg["ADD_COMMENT"] = "Pridėti komentarą";
    Blockly.Msg["CANNOT_DELETE_VARIABLE_PROCEDURE"] = "Negalima ištrinti kintamojo '%1', nes jis yra funkcijos '%2' apibrėžimo dalis";
    Blockly.Msg["CHANGE_VALUE_TITLE"] = "Pakeisti vertę:";
    Blockly.Msg["CLEAN_UP"] = "Išvalyti blokus";
    Blockly.Msg["COLLAPSE_ALL"] = "Sutraukti blokus";
    Blockly.Msg["COLLAPSE_BLOCK"] = "Sutraukti bloką";
    Blockly.Msg["COLOUR_BLEND_COLOUR1"] = "spalva 1";
    Blockly.Msg["COLOUR_BLEND_COLOUR2"] = "spalva 2";
    Blockly.Msg["COLOUR_BLEND_HELPURL"] = "http://meyerweb.com/eric/tools/color-blend/";
    Blockly.Msg["COLOUR_BLEND_RATIO"] = "santykis";
    Blockly.Msg["COLOUR_BLEND_TITLE"] = "maišyti";
    Blockly.Msg["COLOUR_BLEND_TOOLTIP"] = "Sumaišo dvi spalvas nurodytu santykiu (0,0 - 1,0).";
    Blockly.Msg["COLOUR_PICKER_HELPURL"] = "https://en.wikipedia.org/wiki/Color";
    Blockly.Msg["COLOUR_PICKER_TOOLTIP"] = "Pasirinkite spalvą iš paletės.";
    Blockly.Msg["COLOUR_RANDOM_HELPURL"] = "http://randomcolour.com";
    Blockly.Msg["COLOUR_RANDOM_TITLE"] = "atsitiktinė spalva";
    Blockly.Msg["COLOUR_RANDOM_TOOLTIP"] = "Pasirinkite spalvą atsitiktinai.";
    Blockly.Msg["COLOUR_RGB_BLUE"] = "mėlyna";
    Blockly.Msg["COLOUR_RGB_GREEN"] = "žalia";
    Blockly.Msg["COLOUR_RGB_HELPURL"] = "http://www.december.com/html/spec/colorper.html";
    Blockly.Msg["COLOUR_RGB_RED"] = "raudona";
    Blockly.Msg["COLOUR_RGB_TITLE"] = "spalvoti su";
    Blockly.Msg["COLOUR_RGB_TOOLTIP"] = "Sukurkite spalvą nurodydami raudonos, žalios ir mėlynos spalvos kiekius. Visos reikšmės turi būti nuo 0 iki 100.";
    Blockly.Msg["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";
    Blockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "nutraukti ciklą";
    Blockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "tęsti su kita ciklo iteracija";
    Blockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "Nutraukti esamą ciklą.";
    Blockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "Praleisti likusią ciklo dalį ir tęsti su kita iteracija.";
    Blockly.Msg["CONTROLS_FLOW_STATEMENTS_WARNING"] = "Įspėjimas: Šis blokas gali būti naudojamas tik ciklo viduje.";
    Blockly.Msg["CONTROLS_FOREACH_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each";
    Blockly.Msg["CONTROLS_FOREACH_TITLE"] = "kiekvienam elementui %1 sąraše %2";
    Blockly.Msg["CONTROLS_FOREACH_TOOLTIP"] = "Kiekvienam sąrašo elementui, nustatykite kintamąjį '%1' į šį elementą, tada atlikite tam tikrus veiksmus.";
    Blockly.Msg["CONTROLS_FOR_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#count-with";
    Blockly.Msg["CONTROLS_FOR_TITLE"] = "skaičiuoti su %1 nuo %2 iki %3 po %4";
    Blockly.Msg["CONTROLS_FOR_TOOLTIP"] = "Kintamasis '%1' įgauna reikšmes nuo pradinio skaičiaus iki pabaigos skaičiaus, skaičiuojant nurodytais intervalais, ir atlieka nurodytus blokus.";
    Blockly.Msg["CONTROLS_IF_ELSEIF_TOOLTIP"] = "Pridėti sąlygą prie IF bloko.";
    Blockly.Msg["CONTROLS_IF_ELSE_TOOLTIP"] = "Pridėti galutinę, viską apimančią sąlygą prie IF bloko.";
    Blockly.Msg["CONTROLS_IF_HELPURL"] = "https://github.com/google/blockly/wiki/IfElse";
    Blockly.Msg["CONTROLS_IF_IF_TOOLTIP"] = "Pridėti, pašalinti arba pertvarkyti sekcijas, kad konfigūruotumėte šį IF bloką.";
    Blockly.Msg["CONTROLS_IF_MSG_ELSE"] = "kitu atveju";
    Blockly.Msg["CONTROLS_IF_MSG_ELSEIF"] = "kitu atveju jei";
    Blockly.Msg["CONTROLS_IF_MSG_IF"] = "jei";
    Blockly.Msg["CONTROLS_IF_TOOLTIP_1"] = "Jei reikšmė teisinga, atlikti kai kuriuos veiksmus.";
    Blockly.Msg["CONTROLS_IF_TOOLTIP_2"] = "Jei reikšmė teisinga, atlikti pirmąjį veiksmų bloką. Kitu atveju atlikti antrąjį veiksmų bloką.";
    Blockly.Msg["CONTROLS_IF_TOOLTIP_3"] = "Jei pirmoji reikšmė teisinga, atlikti pirmąjį veiksmų bloką. Kitu atveju, jei antroji reikšmė teisinga, atlikti antrąjį veiksmų bloką.";
    Blockly.Msg["CONTROLS_IF_TOOLTIP_4"] = "Jei pirmoji reikšmė teisinga, atlikti pirmąjį veiksmų bloką. Kitu atveju, jei antroji reikšmė teisinga, atlikti antrąjį veiksmų bloką. Jei nė viena iš reikšmių nėra teisinga, atlikti paskutinį veiksmų bloką.";
    Blockly.Msg["CONTROLS_REPEAT_HELPURL"] = "https://en.wikipedia.org/wiki/For_loop";
    Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"] = "atlikti";
    Blockly.Msg["CONTROLS_REPEAT_TITLE"] = "kartoti %1 kartus";
    Blockly.Msg["CONTROLS_REPEAT_TOOLTIP"] = "Atlikti kai kuriuos veiksmus kelis kartus.";
    Blockly.Msg["CONTROLS_WHILEUNTIL_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#repeat";
    Blockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "kartoti kol";
    Blockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "kartoti kol yra";
    Blockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "Kol reikšmė neteisinga, atlikti kai kuriuos veiksmus.";
    Blockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "Kol reikšmė teisinga, atlikti kai kuriuos veiksmus.";
    Blockly.Msg["DELETE_ALL_BLOCKS"] = "Ištrinti visus %1 blokus?";
    Blockly.Msg["DELETE_BLOCK"] = "Ištrinti bloką";
    Blockly.Msg["DELETE_VARIABLE"] = "Ištrinti kintamąjį '%1'";
    Blockly.Msg["DELETE_VARIABLE_CONFIRMATION"] = "Ištrinti %1 naudojimus kintamajam '%2'?";
    Blockly.Msg["DELETE_X_BLOCKS"] = "Ištrinti %1 blokus";
    Blockly.Msg["DISABLE_BLOCK"] = "Išjungti bloką";
    Blockly.Msg["DUPLICATE_BLOCK"] = "Dubliuoti";
    Blockly.Msg["DUPLICATE_COMMENT"] = "Dubliuoti Komentarą";
    Blockly.Msg["ENABLE_BLOCK"] = "Įjungti bloką";
    Blockly.Msg["EXPAND_ALL"] = "Išplėsti blokus";
    Blockly.Msg["EXPAND_BLOCK"] = "Išplėsti bloką";
    Blockly.Msg["EXTERNAL_INPUTS"] = "Išorinės įvestys";
    Blockly.Msg["HELP"] = "Pagalba";
    Blockly.Msg["INLINE_INPUTS"] = "Įdėtosios įvestys";
    Blockly.Msg["IOS_CANCEL"] = "Atšaukti";
    Blockly.Msg["IOS_ERROR"] = "Klaida";
    Blockly.Msg["IOS_OK"] = "Gerai";
    Blockly.Msg["IOS_PROCEDURES_ADD_INPUT"] = "+ Pridėti Įvestį";
    Blockly.Msg["IOS_PROCEDURES_ALLOW_STATEMENTS"] = "Leisti teiginius";
    Blockly.Msg["IOS_PROCEDURES_DUPLICATE_INPUTS_ERROR"] = "Šioje funkcijoje yra dubliuotų įvestų.";
    Blockly.Msg["IOS_PROCEDURES_INPUTS"] = "ĮVESTYS";
    Blockly.Msg["IOS_VARIABLES_ADD_BUTTON"] = "Pridėti";
    Blockly.Msg["IOS_VARIABLES_ADD_VARIABLE"] = "+ Pridėti Kintamąjį";
    Blockly.Msg["IOS_VARIABLES_DELETE_BUTTON"] = "Ištrinti";
    Blockly.Msg["IOS_VARIABLES_EMPTY_NAME_ERROR"] = "Negalite naudoti tuščio kintamojo pavadinimo.";
    Blockly.Msg["IOS_VARIABLES_RENAME_BUTTON"] = "Pervadinti";
    Blockly.Msg["IOS_VARIABLES_VARIABLE_NAME"] = "Kintamojo pavadinimas";
    Blockly.Msg["LISTS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-empty-list";
    Blockly.Msg["LISTS_CREATE_EMPTY_TITLE"] = "sukurti tuščią sąrašą";
    Blockly.Msg["LISTS_CREATE_EMPTY_TOOLTIP"] = "Grąžina sąrašą, ilgio 0, neturintį jokių duomenų įrašų";
    Blockly.Msg["LISTS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "sąrašas";
    Blockly.Msg["LISTS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Pridėti, pašalinti arba pertvarkyti skyrius, kad konfigūruotumėte šį sąrašo bloką.";
    Blockly.Msg["LISTS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";
    Blockly.Msg["LISTS_CREATE_WITH_INPUT_WITH"] = "sukurti sąrašą su";
    Blockly.Msg["LISTS_CREATE_WITH_ITEM_TOOLTIP"] = "Pridėti elementą prie sąrašo.";
    Blockly.Msg["LISTS_CREATE_WITH_TOOLTIP"] = "Sukurti sąrašą su bet kokiu elementų skaičiumi.";
    Blockly.Msg["LISTS_GET_INDEX_FIRST"] = "pirmas";
    Blockly.Msg["LISTS_GET_INDEX_FROM_END"] = "# nuo pabaigos";
    Blockly.Msg["LISTS_GET_INDEX_FROM_START"] = "#";
    Blockly.Msg["LISTS_GET_INDEX_GET"] = "gauti";
    Blockly.Msg["LISTS_GET_INDEX_GET_REMOVE"] = "gauti ir pašalinti";
    Blockly.Msg["LISTS_GET_INDEX_LAST"] = "paskutinis";
    Blockly.Msg["LISTS_GET_INDEX_RANDOM"] = "atsitiktinis";
    Blockly.Msg["LISTS_GET_INDEX_REMOVE"] = "pašalinti";
    Blockly.Msg["LISTS_GET_INDEX_TAIL"] = "";
    Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FIRST"] = "Grąžina pirmąjį sąrašo elementą.";
    Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FROM"] = "Grąžina elementą iš nurodytos pozicijos sąraše.";
    Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_LAST"] = "Grąžina paskutinį sąrašo elementą.";
    Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_RANDOM"] = "Grąžina atsitiktinį sąrašo elementą.";
    Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST"] = "Pašalina ir grąžina pirmąjį sąrašo elementą.";
    Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM"] = "Pašalina ir grąžina elementą iš nurodytos pozicijos sąraše.";
    Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST"] = "Pašalina ir grąžina paskutinį sąrašo elementą.";
    Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM"] = "Pašalina ir grąžina atsitiktinį sąrašo elementą.";
    Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST"] = "Pašalina pirmąjį sąrašo elementą.";
    Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM"] = "Pašalina elementą iš nurodytos pozicijos sąraše.";
    Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST"] = "Pašalina paskutinį sąrašo elementą.";
    Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM"] = "Pašalina atsitiktinį sąrašo elementą.";
    Blockly.Msg["LISTS_GET_SUBLIST_END_FROM_END"] = "iki # nuo pabaigos";
    Blockly.Msg["LISTS_GET_SUBLIST_END_FROM_START"] = "iki #";
    Blockly.Msg["LISTS_GET_SUBLIST_END_LAST"] = "iki paskutinio";
    Blockly.Msg["LISTS_GET_SUBLIST_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";
    Blockly.Msg["LISTS_GET_SUBLIST_START_FIRST"] = "gauti sub-sąrašą nuo pirmojo";
    Blockly.Msg["LISTS_GET_SUBLIST_START_FROM_END"] = "gauti sub-sąrašą nuo # nuo pabaigos";
    Blockly.Msg["LISTS_GET_SUBLIST_START_FROM_START"] = "gauti sub-sąrašą nuo #";
    Blockly.Msg["LISTS_GET_SUBLIST_TAIL"] = "";
    Blockly.Msg["LISTS_GET_SUBLIST_TOOLTIP"] = "Sukuria nurodytos sąrašo dalies kopiją.";
    Blockly.Msg["LISTS_INDEX_FROM_END_TOOLTIP"] = "%1 yra paskutinis elementas.";
    Blockly.Msg["LISTS_INDEX_FROM_START_TOOLTIP"] = "%1 yra pirmasis elementas.";
    Blockly.Msg["LISTS_INDEX_OF_FIRST"] = "rasti pirmąjį elemento atsiradimą";
    Blockly.Msg["LISTS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";
    Blockly.Msg["LISTS_INDEX_OF_LAST"] = "rasti paskutinį elemento atsiradimą";
    Blockly.Msg["LISTS_INDEX_OF_TOOLTIP"] = "Grąžina pirmojo/paskutiniojo elemento atsiradimo sąraše indeksą. Grąžina %1, jei elementas nerastas.";
    Blockly.Msg["LISTS_INLIST"] = "sąraše";
    Blockly.Msg["LISTS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#is-empty";
    Blockly.Msg["LISTS_ISEMPTY_TITLE"] = "%1 yra tuščias";
    Blockly.Msg["LISTS_ISEMPTY_TOOLTIP"] = "Grąžina „true“, jei sąrašas tuščias.";
    Blockly.Msg["LISTS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#length-of";
    Blockly.Msg["LISTS_LENGTH_TITLE"] = "ilgis %1";
    Blockly.Msg["LISTS_LENGTH_TOOLTIP"] = "Grąžina sąrašo ilgį.";
    Blockly.Msg["LISTS_REPEAT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";
    Blockly.Msg["LISTS_REPEAT_TITLE"] = "sukurti sąrašą su elementu %1 pakartotu %2 kartus";
    Blockly.Msg["LISTS_REPEAT_TOOLTIP"] = "Sukuria sąrašą, sudarytą iš nurodytos reikšmės, pakartotos nurodytą kartų skaičių.";
    Blockly.Msg["LISTS_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";
    Blockly.Msg["LISTS_REVERSE_MESSAGE0"] = "apversti %1";
    Blockly.Msg["LISTS_REVERSE_TOOLTIP"] = "Apversti sąrašo kopiją.";
    Blockly.Msg["LISTS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#in-list--set";
    Blockly.Msg["LISTS_SET_INDEX_INPUT_TO"] = "kaip";
    Blockly.Msg["LISTS_SET_INDEX_INSERT"] = "įterpti į";
    Blockly.Msg["LISTS_SET_INDEX_SET"] = "nustatyti";
    Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST"] = "Įterpia elementą į sąrašo pradžią.";
    Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM"] = "Įterpia elementą į nurodytą poziciją sąraše.";
    Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_LAST"] = "Prideda elementą į sąrašo pabaigą.";
    Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM"] = "Įterpia elementą atsitiktinai sąraše.";
    Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_FIRST"] = "Nustato pirmąjį sąrašo elementą.";
    Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_FROM"] = "Nustato elementą į nurodytą poziciją sąraše.";
    Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_LAST"] = "Nustato paskutinį sąrašo elementą.";
    Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_RANDOM"] = "Nustato atsitiktinį sąrašo elementą.";
    Blockly.Msg["LISTS_SORT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";
    Blockly.Msg["LISTS_SORT_ORDER_ASCENDING"] = "didėjančiai";
    Blockly.Msg["LISTS_SORT_ORDER_DESCENDING"] = "mažėjančiai";
    Blockly.Msg["LISTS_SORT_TITLE"] = "rūšiuoti %1 %2 %3";
    Blockly.Msg["LISTS_SORT_TOOLTIP"] = "Rūšiuoti sąrašo kopiją.";
    Blockly.Msg["LISTS_SORT_TYPE_IGNORECASE"] = "abėcėlės tvarka, nekreipiant dėmesio į raidžių dydį";
    Blockly.Msg["LISTS_SORT_TYPE_NUMERIC"] = "skaitmeninis";
    Blockly.Msg["LISTS_SORT_TYPE_TEXT"] = "abėcėlės tvarka";
    Blockly.Msg["LISTS_SPLIT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";
    Blockly.Msg["LISTS_SPLIT_LIST_FROM_TEXT"] = "sukurti sąrašą iš teksto";
    Blockly.Msg["LISTS_SPLIT_TEXT_FROM_LIST"] = "sukurti tekstą iš sąrašo";
    Blockly.Msg["LISTS_SPLIT_TOOLTIP_JOIN"] = "Sujungti tekstų sąrašą į vieną tekstą, atskirtą skyrikliais.";
    Blockly.Msg["LISTS_SPLIT_TOOLTIP_SPLIT"] = "Skaidyti tekstą į tekstų sąrašą, dalijant kiekvieną skyriklį.";
    Blockly.Msg["LISTS_SPLIT_WITH_DELIMITER"] = "su skyrikliu";
    Blockly.Msg["LOGIC_BOOLEAN_FALSE"] = "klaidinga";
    Blockly.Msg["LOGIC_BOOLEAN_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#values";
    Blockly.Msg["LOGIC_BOOLEAN_TOOLTIP"] = "Grąžina „true“ arba „false“.";
    Blockly.Msg["LOGIC_BOOLEAN_TRUE"] = "tiesa";
    Blockly.Msg["LOGIC_COMPARE_HELPURL"] = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";
    Blockly.Msg["LOGIC_COMPARE_TOOLTIP_EQ"] = "Grąžina „true“, jei abu įvestys sutampa.";
    Blockly.Msg["LOGIC_COMPARE_TOOLTIP_GT"] = "Grąžina „true“, jei pirmoji įvestis didesnė už antrąją.";
    Blockly.Msg["LOGIC_COMPARE_TOOLTIP_GTE"] = "Grąžina „true“, jei pirmoji įvestis didesnė arba lygi antrajai.";
    Blockly.Msg["LOGIC_COMPARE_TOOLTIP_LT"] = "Grąžina „true“, jei pirmoji įvestis mažesnė už antrąją.";
    Blockly.Msg["LOGIC_COMPARE_TOOLTIP_LTE"] = "Grąžina „true“, jei pirmoji įvestis mažesnė arba lygi antrajai.";
    Blockly.Msg["LOGIC_COMPARE_TOOLTIP_NEQ"] = "Grąžina „true“, jei abu įvestys nesutampa.";
    Blockly.Msg["LOGIC_NEGATE_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#not";
    Blockly.Msg["LOGIC_NEGATE_TITLE"] = "ne %1";
    Blockly.Msg["LOGIC_NEGATE_TOOLTIP"] = "Grąžina „true“, jei įvestis klaidinga. Grąžina „false“, jei įvestis tiesa.";
    Blockly.Msg["LOGIC_NULL"] = "niekas";
    Blockly.Msg["LOGIC_NULL_HELPURL"] = "https://en.wikipedia.org/wiki/Nullable_type";
    Blockly.Msg["LOGIC_NULL_TOOLTIP"] = "Grąžina nieką.";
    Blockly.Msg["LOGIC_OPERATION_AND"] = "ir";
    Blockly.Msg["LOGIC_OPERATION_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#logical-operations";
    Blockly.Msg["LOGIC_OPERATION_OR"] = "arba";
    Blockly.Msg["LOGIC_OPERATION_TOOLTIP_AND"] = "Grąžina „true“, jei abu įvestys yra teisingi.";
    Blockly.Msg["LOGIC_OPERATION_TOOLTIP_OR"] = "Grąžina „true“, jei bent viena iš įvestų yra teisinga.";
    Blockly.Msg["LOGIC_TERNARY_CONDITION"] = "bandyti";
    Blockly.Msg["LOGIC_TERNARY_HELPURL"] = "https://en.wikipedia.org/wiki/%3F:";
    Blockly.Msg["LOGIC_TERNARY_IF_FALSE"] = "jei klaidinga";
    Blockly.Msg["LOGIC_TERNARY_IF_TRUE"] = "jei tiesa";
    Blockly.Msg["LOGIC_TERNARY_TOOLTIP"] = "Patikrinti sąlygą teste. Jei sąlyga tiesa, grąžina „jei tiesa“ reikšmę; priešingu atveju grąžina „jei klaidinga“ reikšmę.";
    Blockly.Msg["MATH_ADDITION_SYMBOL"] = "+";
    Blockly.Msg["MATH_ARITHMETIC_HELPURL"] = "https://en.wikipedia.org/wiki/Arithmetic";
    Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_ADD"] = "Grąžina dviejų skaičių sumą.";
    Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "Grąžina dviejų skaičių dalmenį.";
    Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "Grąžina dviejų skaičių skirtumą.";
    Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "Grąžina dviejų skaičių sandaugą.";
    Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_POWER"] = "Grąžina pirmąjį skaičių pakeltą antrojo skaičiaus laipsniu.";
    Blockly.Msg["MATH_CHANGE_HELPURL"] = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
    Blockly.Msg["MATH_CHANGE_TITLE"] = "pakeisti %1 iki %2";
    Blockly.Msg["MATH_CHANGE_TOOLTIP"] = "Pridėti skaičių prie kintamojo '%1'.";
    Blockly.Msg["MATH_CONSTANT_HELPURL"] = "https://en.wikipedia.org/wiki/Mathematical_constant";
    Blockly.Msg["MATH_CONSTANT_TOOLTIP"] = "Grąžina vieną iš bendrųjų konstantų: π (3,141…), e (2,718…), φ (1,618…), sqrt(2) (1,414…), sqrt(½) (0,707…) ar ∞ (begalybė).";
    Blockly.Msg["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_(graphics)";
    Blockly.Msg["MATH_CONSTRAIN_TITLE"] = "apriboti %1 žemiau %2 aukščiau %3";
    Blockly.Msg["MATH_CONSTRAIN_TOOLTIP"] = "Apriboti skaičių, kad jis būtų tarp nurodytų ribų (imtinai).";
    Blockly.Msg["MATH_DIVISION_SYMBOL"] = "÷";
    Blockly.Msg["MATH_IS_DIVISIBLE_BY"] = "yra dalomas iš";
    Blockly.Msg["MATH_IS_EVEN"] = "yra lyginis";
    Blockly.Msg["MATH_IS_NEGATIVE"] = "yra neigiamas";
    Blockly.Msg["MATH_IS_ODD"] = "yra nelyginis";
    Blockly.Msg["MATH_IS_POSITIVE"] = "yra teigiamas";
    Blockly.Msg["MATH_IS_PRIME"] = "yra pirminis";
    Blockly.Msg["MATH_IS_TOOLTIP"] = "Patikrinti, ar skaičius yra lyginis, nelyginis, pirminis, sveikas, teigiamas, neigiamas, ar jis dalijasi iš nurodyto skaičiaus. Grąžina „true“ arba „false“.";
    Blockly.Msg["MATH_IS_WHOLE"] = "yra sveikas";
    Blockly.Msg["MATH_MODULO_HELPURL"] = "https://en.wikipedia.org/wiki/Modulo_operation";
    Blockly.Msg["MATH_MODULO_TITLE"] = "likutis %1 ÷ %2";
    Blockly.Msg["MATH_MODULO_TOOLTIP"] = "Grąžina likutį iš dviejų skaičių dalybos.";
    Blockly.Msg["MATH_MULTIPLICATION_SYMBOL"] = "×";
    Blockly.Msg["MATH_NUMBER_HELPURL"] = "https://en.wikipedia.org/wiki/Number";
    Blockly.Msg["MATH_NUMBER_TOOLTIP"] = "Skaičius.";
    Blockly.Msg["MATH_ONLIST_HELPURL"] = "";
    Blockly.Msg["MATH_ONLIST_OPERATOR_AVERAGE"] = "sąrašo vidurkis";
    Blockly.Msg["MATH_ONLIST_OPERATOR_MAX"] = "didžiausias sąrašo";
    Blockly.Msg["MATH_ONLIST_OPERATOR_MEDIAN"] = "sąrašo mediana";
    Blockly.Msg["MATH_ONLIST_OPERATOR_MIN"] = "mažiausias sąrašo";
    Blockly.Msg["MATH_ONLIST_OPERATOR_MODE"] = "sąrašo modos";
    Blockly.Msg["MATH_ONLIST_OPERATOR_RANDOM"] = "atsitiktinis sąrašo elementas";
    Blockly.Msg["MATH_ONLIST_OPERATOR_STD_DEV"] = "sąrašo standartinis nuokrypis";
    Blockly.Msg["MATH_ONLIST_OPERATOR_SUM"] = "sąrašo suma";
    Blockly.Msg["MATH_ONLIST_TOOLTIP_AVERAGE"] = "Grąžinti sąrašo skaitinių reikšmių vidurkį (aritmetinį vidurkį).";
    Blockly.Msg["MATH_ONLIST_TOOLTIP_MAX"] = "Grąžinti didžiausią skaičių sąraše.";
    Blockly.Msg["MATH_ONLIST_TOOLTIP_MEDIAN"] = "Grąžinti sąrašo medianą.";
    Blockly.Msg["MATH_ONLIST_TOOLTIP_MIN"] = "Grąžinti mažiausią skaičių sąraše.";
    Blockly.Msg["MATH_ONLIST_TOOLTIP_MODE"] = "Grąžinti sąrašą dažniausiai pasitaikančio (-ių) elementų sąraše.";
    Blockly.Msg["MATH_ONLIST_TOOLTIP_RANDOM"] = "Grąžinti atsitiktinį elementą iš sąrašo.";
    Blockly.Msg["MATH_ONLIST_TOOLTIP_STD_DEV"] = "Grąžinti sąrašo standartinį nuokrypį.";
    Blockly.Msg["MATH_ONLIST_TOOLTIP_SUM"] = "Grąžinti visų skaičių sąraše sumą.";
    Blockly.Msg["MATH_POWER_SYMBOL"] = "^";
    Blockly.Msg["MATH_RANDOM_FLOAT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";
    Blockly.Msg["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "atsitiktinė trupmena";
    Blockly.Msg["MATH_RANDOM_FLOAT_TOOLTIP"] = "Grąžinti atsitiktinę trupmeną tarp 0,0 (įskaitant) ir 1,0 (neįskaitant).";
    Blockly.Msg["MATH_RANDOM_INT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";
    Blockly.Msg["MATH_RANDOM_INT_TITLE"] = "atsitiktinis sveikas skaičius nuo %1 iki %2";
    Blockly.Msg["MATH_RANDOM_INT_TOOLTIP"] = "Grąžinti atsitiktinį sveiką skaičių tarp nurodytų ribų, įskaitant.";
    Blockly.Msg["MATH_ROUND_HELPURL"] = "https://en.wikipedia.org/wiki/Rounding";
    Blockly.Msg["MATH_ROUND_OPERATOR_ROUND"] = "apvalinti";
    Blockly.Msg["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "apvalinti žemyn";
    Blockly.Msg["MATH_ROUND_OPERATOR_ROUNDUP"] = "apvalinti aukštyn";
    Blockly.Msg["MATH_ROUND_TOOLTIP"] = "Apvalinti skaičių aukštyn ar žemyn.";
    Blockly.Msg["MATH_SINGLE_HELPURL"] = "https://en.wikipedia.org/wiki/Square_root";
    Blockly.Msg["MATH_SINGLE_OP_ABSOLUTE"] = "absoliutus";
    Blockly.Msg["MATH_SINGLE_OP_ROOT"] = "kvadratinė šaknis";
    Blockly.Msg["MATH_SINGLE_TOOLTIP_ABS"] = "Grąžina skaičiaus absoliutinę reikšmę.";
    Blockly.Msg["MATH_SINGLE_TOOLTIP_EXP"] = "Grąžinti e pakeltą skaičiaus laipsniu.";
    Blockly.Msg["MATH_SINGLE_TOOLTIP_LN"] = "Grąžinti skaičiaus natūralųjį logaritmą.";
    Blockly.Msg["MATH_SINGLE_TOOLTIP_LOG10"] = "Grąžinti skaičiaus dešimtainį logaritmą.";
    Blockly.Msg["MATH_SINGLE_TOOLTIP_NEG"] = "Grąžinti skaičiaus neigiamą reikšmę.";
    Blockly.Msg["MATH_SINGLE_TOOLTIP_POW10"] = "Grąžinti 10 pakeltą skaičiaus laipsniu.";
    Blockly.Msg["MATH_SINGLE_TOOLTIP_ROOT"] = "Grąžinti skaičiaus kvadratinę šaknį.";
    Blockly.Msg["MATH_SUBTRACTION_SYMBOL"] = "-";
    Blockly.Msg["MATH_TRIG_ACOS"] = "acos";
    Blockly.Msg["MATH_TRIG_ASIN"] = "asin";
    Blockly.Msg["MATH_TRIG_ATAN"] = "atan";
    Blockly.Msg["MATH_TRIG_COS"] = "cos";
    Blockly.Msg["MATH_TRIG_HELPURL"] = "https://en.wikipedia.org/wiki/Trigonometric_functions";
    Blockly.Msg["MATH_TRIG_SIN"] = "sin";
    Blockly.Msg["MATH_TRIG_TAN"] = "tan";
    Blockly.Msg["MATH_TRIG_TOOLTIP_ACOS"] = "Grąžina skaičiaus arkkosinusą.";
    Blockly.Msg["MATH_TRIG_TOOLTIP_ASIN"] = "Grąžina skaičiaus arksinusą.";
    Blockly.Msg["MATH_TRIG_TOOLTIP_ATAN"] = "Grąžina skaičiaus arktangentą.";
    Blockly.Msg["MATH_TRIG_TOOLTIP_COS"] = "Grąžina laipsnio kosinusą (ne radiano).";
    Blockly.Msg["MATH_TRIG_TOOLTIP_SIN"] = "Grąžina laipsnio sinusą (ne radiano).";
    Blockly.Msg["MATH_TRIG_TOOLTIP_TAN"] = "Grąžina laipsnio tangentą (ne radiano).";
    Blockly.Msg["NEW_COLOUR_VARIABLE"] = "Sukurti spalvos kintamąjį...";
    Blockly.Msg["NEW_NUMBER_VARIABLE"] = "Sukurti skaičiaus kintamąjį...";
    Blockly.Msg["NEW_STRING_VARIABLE"] = "Sukurti eilutės kintamąjį...";
    Blockly.Msg["NEW_VARIABLE"] = "Sukurti kintamąjį...";
    Blockly.Msg["NEW_VARIABLE_TITLE"] = "Naujo kintamojo pavadinimas:";
    Blockly.Msg["NEW_VARIABLE_TYPE_TITLE"] = "Naujo kintamojo tipas:";
    Blockly.Msg["ORDINAL_NUMBER_SUFFIX"] = "";
    Blockly.Msg["PROCEDURES_ALLOW_STATEMENTS"] = "leisti teiginius";
    Blockly.Msg["PROCEDURES_BEFORE_PARAMS"] = "su:";
    Blockly.Msg["PROCEDURES_CALLNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";
    Blockly.Msg["PROCEDURES_CALLNORETURN_TOOLTIP"] = "Vykdyti naudotojo apibrėžtą funkciją '%1'.";
    Blockly.Msg["PROCEDURES_CALLRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";
    Blockly.Msg["PROCEDURES_CALLRETURN_TOOLTIP"] = "Vykdyti naudotojo apibrėžtą funkciją '%1' ir naudoti jos išvestį.";
    Blockly.Msg["PROCEDURES_CALL_BEFORE_PARAMS"] = "su:";
    Blockly.Msg["PROCEDURES_CREATE_DO"] = "Sukurti '%1'";
    Blockly.Msg["PROCEDURES_DEFNORETURN_COMMENT"] = "Apibūdinkite šią funkciją...";
    Blockly.Msg["PROCEDURES_DEFNORETURN_DO"] = "";
    Blockly.Msg["PROCEDURES_DEFNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";
    Blockly.Msg["PROCEDURES_DEFNORETURN_PROCEDURE"] = "daryti kažką";
    Blockly.Msg["PROCEDURES_DEFNORETURN_TITLE"] = "kad";
    Blockly.Msg["PROCEDURES_DEFNORETURN_TOOLTIP"] = "Sukuria funkciją, kuri negrąžina rezultato.";
    Blockly.Msg["PROCEDURES_DEFRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";
    Blockly.Msg["PROCEDURES_DEFRETURN_RETURN"] = "grįžti";
    Blockly.Msg["PROCEDURES_DEFRETURN_TOOLTIP"] = "Sukuria funkciją su rezultatu.";
    Blockly.Msg["PROCEDURES_DEF_DUPLICATE_WARNING"] = "Įspėjimas: Ši funkcija turi pasikartojančius parametrus.";
    Blockly.Msg["PROCEDURES_HIGHLIGHT_DEF"] = "Išryškinti funkcijos apibrėžimą";
    Blockly.Msg["PROCEDURES_IFRETURN_HELPURL"] = "http://c2.com/cgi/wiki?GuardClause";
    Blockly.Msg["PROCEDURES_IFRETURN_TOOLTIP"] = "Jei reikšmė tiesa, tada grąžinti antrąją reikšmę.";
    Blockly.Msg["PROCEDURES_IFRETURN_WARNING"] = "Įspėjimas: Šis blokas gali būti naudojamas tik funkcijos apibrėžime.";
    Blockly.Msg["PROCEDURES_MUTATORARG_TITLE"] = "įvesties pavadinimas:";
    Blockly.Msg["PROCEDURES_MUTATORARG_TOOLTIP"] = "Pridėti įvestį į funkciją.";
    Blockly.Msg["PROCEDURES_MUTATORCONTAINER_TITLE"] = "įvestys";
    Blockly.Msg["PROCEDURES_MUTATORCONTAINER_TOOLTIP"] = "Pridėti, pašalinti arba pertvarkyti funkcijos įvestis.";
    Blockly.Msg["REDO"] = "Atstatyti";
    Blockly.Msg["REMOVE_COMMENT"] = "Pašalinti Komentarą";
    Blockly.Msg["RENAME_VARIABLE"] = "Pervadinti kintamąjį...";
    Blockly.Msg["RENAME_VARIABLE_TITLE"] = "Pervadinti visus '%1' kintamuosius į:";
    Blockly.Msg["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";
    Blockly.Msg["TEXT_APPEND_TITLE"] = "prie %1 pridėti tekstą %2";
    Blockly.Msg["TEXT_APPEND_TOOLTIP"] = "Pridėti tekstą prie kintamojo '%1'.";
    Blockly.Msg["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";
    Blockly.Msg["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "į mažąsias raides";
    Blockly.Msg["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "į Pavadinimo Raides";
    Blockly.Msg["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "į DIDŽIĄSIAS RAIDES";
    Blockly.Msg["TEXT_CHANGECASE_TOOLTIP"] = "Grąžinti teksto kopiją kitu atveju.";
    Blockly.Msg["TEXT_CHARAT_FIRST"] = "gauti pirmą raidę";
    Blockly.Msg["TEXT_CHARAT_FROM_END"] = "gauti raidę # nuo galo";
    Blockly.Msg["TEXT_CHARAT_FROM_START"] = "gauti raidę #";
    Blockly.Msg["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text";
    Blockly.Msg["TEXT_CHARAT_LAST"] = "gauti paskutinę raidę";
    Blockly.Msg["TEXT_CHARAT_RANDOM"] = "gauti atsitiktinę raidę";
    Blockly.Msg["TEXT_CHARAT_TAIL"] = "";
    Blockly.Msg["TEXT_CHARAT_TITLE"] = "tekste %1 %2";
    Blockly.Msg["TEXT_CHARAT_TOOLTIP"] = "Grąžina raidę nurodytoje pozicijoje.";
    Blockly.Msg["TEXT_COUNT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#counting-substrings";
    Blockly.Msg["TEXT_COUNT_MESSAGE0"] = "skaičiuoti %1 %2";
    Blockly.Msg["TEXT_COUNT_TOOLTIP"] = "Sužinoti, kiek kartų tam tikras tekstas pasikartoja kitame tekste.";
    Blockly.Msg["TEXT_CREATE_JOIN_ITEM_TOOLTIP"] = "Pridėti elementą prie teksto.";
    Blockly.Msg["TEXT_CREATE_JOIN_TITLE_JOIN"] = "sujungti";
    Blockly.Msg["TEXT_CREATE_JOIN_TOOLTIP"] = "Pridėti, pašalinti arba pertvarkyti skyrius, kad pertvarkytumėte šį teksto bloką.";
    Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_END"] = "iki raidės # nuo galo";
    Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_START"] = "iki raidės #";
    Blockly.Msg["TEXT_GET_SUBSTRING_END_LAST"] = "iki paskutinės raidės";
    Blockly.Msg["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";
    Blockly.Msg["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "tekste";
    Blockly.Msg["TEXT_GET_SUBSTRING_START_FIRST"] = "gauti poaistringį nuo pirmosios raidės";
    Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_END"] = "gauti poaistringį nuo raidės # nuo galo";
    Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_START"] = "gauti poaistringį nuo raidės #";
    Blockly.Msg["TEXT_GET_SUBSTRING_TAIL"] = "";
    Blockly.Msg["TEXT_GET_SUBSTRING_TOOLTIP"] = "Grąžina nurodytos dalies tekstą.";
    Blockly.Msg["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text";
    Blockly.Msg["TEXT_INDEXOF_OPERATOR_FIRST"] = "rasti pirmąjį teksto atsiradimą";
    Blockly.Msg["TEXT_INDEXOF_OPERATOR_LAST"] = "rasti paskutinį teksto atsiradimą";
    Blockly.Msg["TEXT_INDEXOF_TITLE"] = "tekste %1 %2 %3";
    Blockly.Msg["TEXT_INDEXOF_TOOLTIP"] = "Grąžina pirmojo/paskutiniojo pirmojo teksto pasikartojimo antrajame tekste indeksą. Grąžina %1, jei tekstas nerastas.";
    Blockly.Msg["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";
    Blockly.Msg["TEXT_ISEMPTY_TITLE"] = "%1 yra tuščias";
    Blockly.Msg["TEXT_ISEMPTY_TOOLTIP"] = "Grąžina „true“, jei pateiktas tekstas yra tuščias.";
    Blockly.Msg["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation";
    Blockly.Msg["TEXT_JOIN_TITLE_CREATEWITH"] = "sukurti tekstą su";
    Blockly.Msg["TEXT_JOIN_TOOLTIP"] = "Sukurti teksto fragmentą sujungiant bet kokį elementų skaičių.";
    Blockly.Msg["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";
    Blockly.Msg["TEXT_LENGTH_TITLE"] = "teksto %1 ilgis";
    Blockly.Msg["TEXT_LENGTH_TOOLTIP"] = "Grąžina simbolių skaičių (įskaitant tarpus) pateiktame tekste.";
    Blockly.Msg["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";
    Blockly.Msg["TEXT_PRINT_TITLE"] = "spausdinti %1";
    Blockly.Msg["TEXT_PRINT_TOOLTIP"] = "Spausdinti nurodytą tekstą, skaičių ar kitą reikšmę.";
    Blockly.Msg["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";
    Blockly.Msg["TEXT_PROMPT_TOOLTIP_NUMBER"] = "Paprašyti vartotojo įvesti skaičių.";
    Blockly.Msg["TEXT_PROMPT_TOOLTIP_TEXT"] = "Paprašyti vartotojo įvesti tekstą.";
    Blockly.Msg["TEXT_PROMPT_TYPE_NUMBER"] = "paprašyti įvesti skaičių su pranešimu";
    Blockly.Msg["TEXT_PROMPT_TYPE_TEXT"] = "paprašyti įvesti tekstą su pranešimu";
    Blockly.Msg["TEXT_REPLACE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#replacing-substrings";
    Blockly.Msg["TEXT_REPLACE_MESSAGE0"] = "pakeisti %1 į %2 %3";
    Blockly.Msg["TEXT_REPLACE_TOOLTIP"] = "Pakeisti visus tam tikro teksto pasikartojimus kitame tekste.";
    Blockly.Msg["TEXT_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#reversing-text";
    Blockly.Msg["TEXT_REVERSE_MESSAGE0"] = "apversti %1";
    Blockly.Msg["TEXT_REVERSE_TOOLTIP"] = "Apversti tekste esančių simbolių tvarką.";
    Blockly.Msg["TEXT_TEXT_HELPURL"] = "https://en.wikipedia.org/wiki/String_(computer_science)";
    Blockly.Msg["TEXT_TEXT_TOOLTIP"] = "Raidė, žodis ar eilutė teksto.";
    Blockly.Msg["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";
    Blockly.Msg["TEXT_TRIM_OPERATOR_BOTH"] = "apkarpyti tarpus nuo abiejų pusių";
    Blockly.Msg["TEXT_TRIM_OPERATOR_LEFT"] = "apkarpyti tarpus nuo kairės pusės";
    Blockly.Msg["TEXT_TRIM_OPERATOR_RIGHT"] = "apkarpyti tarpus nuo dešinės pusės";
    Blockly.Msg["TEXT_TRIM_TOOLTIP"] = "Grąžinti teksto kopiją su pašalintais tarpais vienoje arba abiejose pusėse.";
    Blockly.Msg["TODAY"] = "Šiandien";
    Blockly.Msg["UNDO"] = "Atšaukti";
    Blockly.Msg["VARIABLES_DEFAULT_NAME"] = "elementas";
    Blockly.Msg["VARIABLES_GET_CREATE_SET"] = "Sukurti 'nustatyti %1'";
    Blockly.Msg["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get";
    Blockly.Msg["VARIABLES_GET_TOOLTIP"] = "Grąžina šio kintamojo reikšmę.";
    Blockly.Msg["VARIABLES_SET"] = "nustatyti %1 į %2";
    Blockly.Msg["VARIABLES_SET_CREATE_GET"] = "Sukurti 'gauti %1'";
    Blockly.Msg["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";
    Blockly.Msg["VARIABLES_SET_TOOLTIP"] = "Nustato šį kintamąjį, kad jis būtų lygus įvesti.";
    Blockly.Msg["VARIABLE_ALREADY_EXISTS"] = "Kintamasis pavadinimu '%1' jau egzistuoja.";
    Blockly.Msg["VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE"] = "Kintamasis pavadinimu '%1' jau egzistuoja kito tipo: '%2'.";
    Blockly.Msg["WORKSPACE_COMMENT_DEFAULT_TEXT"] = "Pasakykite kažką...";
    Blockly.Msg["PROCEDURES_DEFRETURN_TITLE"] = Blockly.Msg["PROCEDURES_DEFNORETURN_TITLE"];
    Blockly.Msg["CONTROLS_IF_IF_TITLE_IF"] = Blockly.Msg["CONTROLS_IF_MSG_IF"];
    Blockly.Msg["CONTROLS_WHILEUNTIL_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
    Blockly.Msg["CONTROLS_IF_MSG_THEN"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
    Blockly.Msg["CONTROLS_IF_ELSE_TITLE_ELSE"] = Blockly.Msg["CONTROLS_IF_MSG_ELSE"];
    Blockly.Msg["PROCEDURES_DEFRETURN_PROCEDURE"] = Blockly.Msg["PROCEDURES_DEFNORETURN_PROCEDURE"];
    Blockly.Msg["LISTS_GET_SUBLIST_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
    Blockly.Msg["LISTS_GET_INDEX_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
    Blockly.Msg["MATH_CHANGE_TITLE_ITEM"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
    Blockly.Msg["PROCEDURES_DEFRETURN_DO"] = Blockly.Msg["PROCEDURES_DEFNORETURN_DO"];
    Blockly.Msg["CONTROLS_IF_ELSEIF_TITLE_ELSEIF"] = Blockly.Msg["CONTROLS_IF_MSG_ELSEIF"];
    Blockly.Msg["LISTS_SET_INDEX_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
    Blockly.Msg["CONTROLS_FOR_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
    Blockly.Msg["LISTS_CREATE_WITH_ITEM_TITLE"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
    Blockly.Msg["TEXT_APPEND_VARIABLE"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
    Blockly.Msg["TEXT_CREATE_JOIN_ITEM_TITLE_ITEM"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
    Blockly.Msg["LISTS_INDEX_OF_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
    Blockly.Msg["PROCEDURES_DEFRETURN_COMMENT"] = Blockly.Msg["PROCEDURES_DEFNORETURN_COMMENT"];

    Blockly.Msg["MATH_HUE"] = "230";
    Blockly.Msg["LISTS_HUE"] = "260";
    Blockly.Msg["LOGIC_HUE"] = "210";
    Blockly.Msg["VARIABLES_HUE"] = "330";
    Blockly.Msg["TEXTS_HUE"] = "160";
    Blockly.Msg["PROCEDURES_HUE"] = "290";
    Blockly.Msg["COLOUR_HUE"] = "20";
    Blockly.Msg["VARIABLES_DYNAMIC_HUE"] = "310";

}

blockly_init_lt();
